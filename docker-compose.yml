version: '3'

services:
    # TheAnswer AI web application (Next.js frontend)
    appsweb:
        build:
            context: .
            dockerfile: apps/web/Dockerfile
            args:
                - AUTH0_BASE_URL=${AUTH0_BASE_URL}
                - AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL}
                - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
                - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
                - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
                - AUTH0_ORGANIZATION_ID=${AUTH0_ORGANIZATION_ID}
                - AUTH0_DOMAIN=${AUTH0_DOMAIN}
                - FLAGSMITH_ENVIRONMENT_ID=${FLAGSMITH_ENVIRONMENT_ID}
                - WEB_AUTH0_SECRET=${WEB_AUTH0_SECRET}
        restart: unless-stopped
        ports:
            - '3000:3000'
        env_file:
            - .env
        environment:
            # - NODE_ENV=production
            # - PORT=3000
            # - AUTH0_BASE_URL=${AUTH0_BASE_URL:-http://localhost:3000}
            # - AUTH0_SECRET=${AUTH0_SECRET}
            # - AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL}
            # - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
            # - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
            # - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
            # - AUTH0_ORGANIZATION_ID=${AUTH0_ORGANIZATION_ID}
            # - FLOWISE_DOMAIN=${FLOWISE_DOMAIN:-http://localhost:4000}
            - DATABASE_URL=postgresql://example_user:example_password@postgres:5432/example_db?schema=web&connection_limit=1
            - REDIS_URL="redis://redis:6379"
        depends_on:
            - postgres
            - redis
            - flowise
        networks:
            - app-network

    # Flowise AI application
    flowise:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        ports:
            - '4000:4000'
        env_file:
            - .env
        environment:
            - PORT=4000
            - CORS_ORIGINS=${CORS_ORIGINS:-*}
            - IFRAME_ORIGINS=${IFRAME_ORIGINS:-*}
            - FLOWISE_USERNAME=${FLOWISE_USERNAME}
            - FLOWISE_PASSWORD=${FLOWISE_PASSWORD}
            - DEBUG=${DEBUG:-false}
            - DATABASE_TYPE=${DATABASE_TYPE:-postgres}
            - DATABASE_HOST=postgres
            - DATABASE_PORT=5432
            - DATABASE_NAME=example_db
            - DATABASE_USER=example_user
            - DATABASE_PASSWORD=example_password
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - AAI_DEFAULT_REDIS_URL=redis://redis:6379
            - REDIS_URL=redis://redis:6379
            - DISABLE_FLOWISE_TELEMETRY=${DISABLE_FLOWISE_TELEMETRY:-true}
        volumes:
            - flowise_data:/root/.flowise
        depends_on:
            - postgres
            - redis
        networks:
            - app-network

    # Redis for caching and session storage
    redis:
        image: redis:latest
        restart: unless-stopped
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data
        networks:
            - app-network

    # PostgreSQL database with pgvector
    postgres:
        image: pgvector/pgvector:pg16
        restart: unless-stopped
        ports:
            - '5432:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            POSTGRES_PORT: 5432
            POSTGRES_USER: example_user
            POSTGRES_PASSWORD: example_password
            POSTGRES_DB: example_db
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    postgres_data:
    redis_data:
    flowise_data:
