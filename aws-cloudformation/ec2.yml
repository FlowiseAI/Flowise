AWSTemplateFormatVersion: "2010-09-09"

Description: This CloudFormation template creates an EC2 instance to deploy Flowise with Docker.

Parameters:
  Stage:
    Description: Prefix of resource names
    Type: String
    Default: sumo-flowise

  Environment:
    Description: "Deployment environment (e.g., dev, prod)"
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

  KeyName:
    Description: Name of the existing EC2 Key Pair to enable SSH access to the instance.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing key pair.
    Default: sumo-flowise-key

  InstanceType:
    Description: EC2 instance type for the Flowise application.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
      - t3.small
      - t3.medium
    ConstraintDescription: Must be a valid EC2 instance type.

Mappings:
  RegionMap:
    # Use Amazon Linux 2 AMI IDs based on region
    us-east-1:
      AMI: "ami-01816d07b1128cd2d" # Amazon Linux 2023 AMI for us-east-1
    us-west-2:
      AMI: "ami-0166fe664262f664c" # Amazon Linux 2 AMI (HVN) for us-west-2

Resources:
  #### EC2 Instance ####
  SumoFlowiseInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      # SecurityGroupIds:
      #   - !ImportValue 
      #     Fn::Join: ["-", [!Ref Stage, LBSGId, !Ref Environment]]
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Stage, "instance", !Ref Environment]]
        - Key: Environment
          Value: !Ref Environment
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !ImportValue 
            Fn::Join: ["-", [!Ref Stage, PublicSubnet1Id, !Ref Environment]]
          GroupSet:
            - !ImportValue 
              Fn::Join: ["-", [!Ref Stage, LBSGId, !Ref Environment]]
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Update packages
          sudo yum update -y

          # Install Docker
          sudo yum install -y docker
          sudo systemctl enable docker
          sudo systemctl start docker

          # Add ec2-user to the Docker group
          # usermod -aG docker ec2-user

          # Install Docker Compose
          # sudo yum install docker-compose-plugin
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.32.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
          sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

          # Install Git
          # yum install -y git

          # Clone the Flowise repository
          # git clone https://github.com/FlowiseAI/Flowise.git /home/ec2-user/flowise
          cd /home/ec2-user/flowise

          # Create the .env file
          cat <<EOT >> /home/ec2-user/flowise/docker/.env
          PORT=3000
          DATABASE_PATH=/root/.flowise
          APIKEY_PATH=/root/.flowise
          SECRETKEY_PATH=/root/.flowise
          LOG_PATH=/root/.flowise/logs
          BLOB_STORAGE_PATH=/root/.flowise/storage
          EOT

          cd /home/ec2-user/flowise/docker

          # Start the Flowise application using Docker Compose
          docker-compose up -d


Outputs:
  SumoFlowiseInstanceId:
    Description: The ID of the created EC2 instance.
    Value: !Ref SumoFlowiseInstance

  SumoFlowisePublicIP:
    Description: The public IP address of the EC2 instance.
    Value: !GetAtt SumoFlowiseInstance.PublicIp

  SumoFlowiseWebAppURL:
    Description: The URL to access the Flowise application.
    Value: !Sub "http://${SumoFlowiseInstance.PublicIp}:3000"