AWSTemplateFormatVersion: "2010-09-09"

Description: This CloudFormation template creates an EC2 instance to deploy Flowise with Docker.

Parameters:
  Stage:
    Description: Prefix of resource names
    Type: String
    Default: sumo-flowise

  Environment:
    Description: "Deployment environment (e.g., dev, prod)"
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

  KeyName:
    Description: Name of the existing EC2 Key Pair to enable SSH access to the instance.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing key pair.
    Default: sumo-flowise-key

  InstanceType:
    Description: EC2 instance type for the Flowise application.
    Type: String
    Default: t3.large
    AllowedValues:
      - t2.micro
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
    ConstraintDescription: Must be a valid EC2 instance type.

Mappings:
  RegionMap:
    # Use Amazon Linux 2 AMI IDs based on region
    us-east-1:
      AMI: "ami-01816d07b1128cd2d" # Amazon Linux 2023 AMI for us-east-1
    us-west-2:
      AMI: "ami-0166fe664262f664c" # Amazon Linux 2 AMI (HVN) for us-west-2

Resources:
  SumoFlowiseLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/flowise/logs-${Environment}"
      RetentionInDays: 7 # Retain logs for 7 days (customize based on needs)
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Stage, "logs", !Ref Environment]]
        - Key: Environment
          Value: !Ref Environment

  SumoFlowiseLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchAgentPolicy
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
  
  SumoFlowiseInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref SumoFlowiseLogsRole

  #### EC2 Instance ####
  SumoFlowiseInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      IamInstanceProfile: !Ref SumoFlowiseInstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 60
            VolumeType: gp2
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Stage, "instance", !Ref Environment]]
        - Key: Environment
          Value: !Ref Environment
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeviceIndex: 0
          SubnetId: !ImportValue 
            Fn::Join: ["-", [!Ref Stage, "Private1Id", !Ref Environment]]
          GroupSet:
            - !ImportValue 
              Fn::Join: ["-", [!Ref Stage, "LoadbalancerSGId", !Ref Environment]]

Outputs:
  SumoFlowiseInstanceId:
    Description: The ID of the created EC2 instance.
    Value: !Ref SumoFlowiseInstance
    Export:
      Name: !Join ["-", [!Ref Stage, "InstanceId", !Ref Environment]]

  # SumoFlowisePublicIP:
  #   Description: The public IP address of the EC2 instance.
  #   Value: !GetAtt SumoFlowiseInstance.PublicIp

  SumoFlowiseInstanceIP:
    Description: 'IP address of the Chatwoot EC2 instance'
    Value: !GetAtt SumoFlowiseInstance.PrivateIp
    Export:
      Name: !Join ["-", [!Ref Stage, "InstanceIP", !Ref Environment]]
