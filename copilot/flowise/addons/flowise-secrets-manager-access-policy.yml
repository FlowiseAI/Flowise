Parameters:
    App:
        Type: String
        Description: Your application's name.
    Env:
        Type: String
        Description: The environment name your service, job, or workflow is being deployed to.
    Name:
        Type: String
        Description: Your workload's name.

Resources:
    # IAM policy to access the environment-level encryption key
    FlowiseSecretsManagerAccessPolicy:
        Type: AWS::IAM::ManagedPolicy
        Metadata:
            'aws:copilot:description': 'Allow Flowise task role to access FlowiseEncryptionKey from Secrets Manager'
        Properties:
            Description: 'Access for Flowise to retrieve and manage the FlowiseEncryptionKey secret'
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    - Sid: AccessFlowiseEncryptionKey
                      Effect: Allow
                      Action:
                          - secretsmanager:GetSecretValue
                          - secretsmanager:CreateSecret
                          - secretsmanager:DescribeSecret
                      Resource:
                          - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${App}-${Env}-FlowiseEncryptionKey-*'
                    # If you use a customer-managed KMS key for the secret, also allow kms:Decrypt:
                    # - Sid: DecryptWithCMK
                    #   Effect: Allow
                    #   Action: kms:Decrypt
                    #   Resource: arn:aws:kms:<region>:<account>:key/<your-key-id>

Outputs:
    FlowiseSecretsManagerAccessPolicyArn:
        Description: 'Managed policy to attach to the task role for Secrets Manager access'
        Value: !Ref FlowiseSecretsManagerAccessPolicy
