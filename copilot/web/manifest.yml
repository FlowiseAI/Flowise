# The manifest for the "web" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: web
type: Load Balanced Web Service

# Distribute traffic to your service.
http:
    # Requests to this path will be forwarded to your service.
    path: '/'
    # Health check path for Next.js - checks Auth0 session endpoint
    healthcheck: '/api/auth/session'
    # Domain alias for the frontend
    # <customer>.theanswer.ai
    #alias: ${COPILOT_SVC_NAME}.${COPILOT_ENVIRONMENT_NAME}.${COPILOT_APPLICATION_NAME}.theanswer.ai
    alias: web.${COPILOT_ENVIRONMENT_NAME}.${COPILOT_APPLICATION_NAME}.theanswer.ai
    # Enable session stickiness for consistent user experience
    stickiness: true

# Configuration for your containers and service.
image:
    # Docker build arguments
    build:
        dockerfile: ./apps/web/Dockerfile
        context: .
        args:
            NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${NEXT_PUBLIC_GOOGLE_CLIENT_ID}
            NEXT_PUBLIC_GOOGLE_DEVELOPER_KEY: ${NEXT_PUBLIC_GOOGLE_DEVELOPER_KEY}
            #AUTH0_BASE_URL: ${AUTH0_BASE_URL}
            AUTH0_BASE_URL: app.${COPILOT_ENVIRONMENT_NAME}.${COPILOT_APPLICATION_NAME}.theanswer.ai

    # Port exposed through your container to route traffic to it.
    port: 3000

cpu: 1024 # Number of CPU units for the task
memory: 2048 # Amount of memory in MiB used by the task
count: 2 # Number of tasks that should be running in your servicde
exec: true # Enable running commands in your container

# Enable Service Connect for intra-environment traffic between services
network:
    connect: true

# Optional fields for more advanced use-cases.
#
variables: # Pass environment variables as key value pairs.
    NODE_ENV: production
    PORT: '3000'
    HOSTNAME: '0.0.0.0'
    NEXT_TELEMETRY_DISABLED: '1'

# Load environment-specific variables from file
env_file: copilot.${COPILOT_ENVIRONMENT_NAME}.web.env

# Secrets from AWS Secrets Manager or Parameter Store
secrets:
    DATABASE_SECRET:
        from_cfn: ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-flowiseclusterAuroraSecret

    # Auth0 secrets - should be stored in Parameter Store
    # AUTH0_SECRET:
    #     from_cfn: ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-auth0-secret
    # AUTH0_CLIENT_SECRET:
    #     from_cfn: ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-auth0-client-secret

    # Stripe secret for billing
    # BILLING_STRIPE_SECRET_KEY:
    # from_cfn: ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-stripe-secret

# Configure deployment strategy
deployment:
    rolling: 'default'

# Environment-specific overrides
environments:
    staging:
        count: 1
        cpu: 512
        memory: 1024
    production:
        count: 2
        cpu: 2048
        memory: 4096
