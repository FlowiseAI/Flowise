Parameters:
    App:
        Type: String
        Description: Your application's name.
    Env:
        Type: String
        Description: The name of the environment being deployed.
    # Customize your Aurora Serverless cluster by setting the default value of the following parameters.
    flowiseclusterDBName:
        Type: String
        Description: The name of the initial database to be created in the Aurora Serverless v2 cluster.
        Default: flowise
        # Cannot have special characters
        # Naming constraints: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints
    VPCID:
        Type: String
        Description: The ID of the VPC for the environment resources.
        Default: ''
    PublicSubnets:
        Type: String
        Description: The IDs of the public subnets in which to create the Aurora Serverless v2 cluster.
        Default: ''
    PrivateSubnets:
        Type: String
        Description: The IDs of the private subnets in which to create the Aurora Serverless v2 cluster.
        Default: ''

Mappings:
    flowiseclusterEnvScalingConfigurationMap:
        # Default environments (same account)
        staging:
            'DBMinCapacity': 0.5 # AllowedValues: from 0.5 through 128
            'DBMaxCapacity': 8 # AllowedValues: from 0.5 through 128
        prod:
            'DBMinCapacity': 1 # AllowedValues: from 0.5 through 128
            'DBMaxCapacity': 8 # AllowedValues: from 0.5 through 128

Resources:
    flowiseclusterDBSubnetGroup:
        Type: 'AWS::RDS::DBSubnetGroup'
        Properties:
            DBSubnetGroupDescription: Group of private subnets for Aurora Serverless v2 cluster.
            SubnetIds: !Split [',', !Ref PrivateSubnets]

    flowiseclusterWorkloadSecurityGroup:
        Metadata:
            'aws:copilot:description': 'A security group for one or more workloads to access the Aurora Serverless v2 cluster flowisecluster'
        Type: 'AWS::EC2::SecurityGroup'
        Properties:
            GroupDescription: 'The Security Group to access Aurora Serverless v2 cluster flowisecluster.'
            VpcId: !Ref VPCID
            Tags:
                - Key: Name
                  Value: !Sub 'copilot-${App}-${Env}-Aurora'

    flowiseclusterDBClusterSecurityGroup:
        Metadata:
            'aws:copilot:description': 'A security group for your Aurora Serverless v2 cluster flowisecluster'
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: The Security Group for the Aurora Serverless v2 cluster.
            VpcId: !Ref VPCID
            Tags:
                - Key: Name
                  Value: !Sub 'copilot-${App}-${Env}-Aurora'

    flowiseclusterDBClusterSecurityGroupIngressFromWorkload:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            Description: Ingress from one or more workloads in the environment.
            GroupId: !Ref flowiseclusterDBClusterSecurityGroup
            IpProtocol: tcp
            ToPort: 5432
            FromPort: 5432
            SourceSecurityGroupId: !Ref flowiseclusterWorkloadSecurityGroup

    flowiseclusterAuroraSecret:
        Metadata:
            'aws:copilot:description': 'A Secrets Manager secret to store your DB credentials'
        Type: AWS::SecretsManager::Secret
        Properties:
            Description: !Sub Aurora main user secret for ${AWS::StackName}
            GenerateSecretString:
                SecretStringTemplate: '{"username": "postgres"}'
                GenerateStringKey: 'password'
                ExcludePunctuation: true
                IncludeSpace: false
                PasswordLength: 16
    flowiseclusterDBClusterParameterGroup:
        Metadata:
            'aws:copilot:description': 'A DB parameter group for engine configuration values'
        Type: 'AWS::RDS::DBClusterParameterGroup'
        Properties:
            Description: !Ref 'AWS::StackName'
            Family: 'aurora-postgresql16'
            Parameters:
                client_encoding: 'UTF8'

    flowiseclusterDBCluster:
        Metadata:
            'aws:copilot:description': 'The flowisecluster Aurora Serverless v2 database cluster'
        Type: 'AWS::RDS::DBCluster'
        Properties:
            MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref flowiseclusterAuroraSecret, ':SecretString:username}}']]
            MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref flowiseclusterAuroraSecret, ':SecretString:password}}']]
            DatabaseName: !Ref flowiseclusterDBName
            Engine: 'aurora-postgresql'
            EngineVersion: '16.9'
            DBClusterParameterGroupName: !Ref flowiseclusterDBClusterParameterGroup
            DBSubnetGroupName: !Ref flowiseclusterDBSubnetGroup
            Port: 5432
            VpcSecurityGroupIds:
                - !Ref flowiseclusterDBClusterSecurityGroup
            ServerlessV2ScalingConfiguration:
                # Environment-specific autoscaling limits
                MinCapacity: !FindInMap [flowiseclusterEnvScalingConfigurationMap, !Ref Env, DBMinCapacity]
                MaxCapacity: !FindInMap [flowiseclusterEnvScalingConfigurationMap, !Ref Env, DBMaxCapacity]

    flowiseclusterDBWriterInstance:
        Metadata:
            'aws:copilot:description': 'The flowisecluster Aurora Serverless v2 writer instance'
        Type: 'AWS::RDS::DBInstance'
        Properties:
            DBClusterIdentifier: !Ref flowiseclusterDBCluster
            DBInstanceClass: db.serverless
            Engine: 'aurora-postgresql'
            PromotionTier: 1
            AvailabilityZone: !Select
                - 0
                - !GetAZs
                  Ref: AWS::Region

    flowiseclusterSecretAuroraClusterAttachment:
        Type: AWS::SecretsManager::SecretTargetAttachment
        Properties:
            SecretId: !Ref flowiseclusterAuroraSecret
            TargetId: !Ref flowiseclusterDBCluster
            TargetType: AWS::RDS::DBCluster

Outputs:
    flowiseclusterSecret:
        Description: "The JSON secret that holds the database username and password. Fields are 'host', 'port', 'dbname', 'username', 'password', 'dbClusterIdentifier' and 'engine'"
        Value: !Ref flowiseclusterAuroraSecret
        Export:
            Name: !Sub ${App}-${Env}-flowiseclusterAuroraSecret
    flowiseclusterSecurityGroup:
        Description: 'The security group to attach to the workload.'
        Value: !Ref flowiseclusterWorkloadSecurityGroup
        Export:
            Name: !Sub ${App}-${Env}-flowiseclusterSecurityGroup
