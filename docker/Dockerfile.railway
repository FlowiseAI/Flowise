# Stage 1: Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 py3-pip make g++ build-base git

# Copy package files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY packages/ui/package.json ./packages/ui/
COPY packages/server/package.json ./packages/server/
COPY packages/components/package.json ./packages/components/
COPY packages/api-documentation/package.json ./packages/api-documentation/

# Install dependencies
RUN npm install -g pnpm
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build packages
RUN pnpm build

# Stage 2: Production stage
FROM node:20-alpine

WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache chromium git python3 py3-pip make g++ build-base cairo-dev pango-dev curl

# Set the environment variable for Puppeteer
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
ENV PUPPETEER_SKIP_DOWNLOAD=true

# Copy built files from builder stage
COPY --from=builder /app/packages/server/dist ./packages/server/dist
COPY --from=builder /app/packages/server/package.json ./packages/server/
COPY --from=builder /app/packages/ui/build ./packages/ui/build
COPY --from=builder /app/packages/components/dist ./packages/components/dist
COPY --from=builder /app/packages/api-documentation/dist ./packages/api-documentation/dist

# Copy scripts and configurations
COPY --from=builder /app/packages/server/bin ./packages/server/bin

# Set permissions for the run script
RUN chmod +x ./packages/server/bin/run

# Install production dependencies for server
WORKDIR /app/packages/server
RUN npm install --production

WORKDIR /app

# Set environment variables
ENV PORT=3000
ENV HOST=0.0.0.0
ENV FLOWISE_USERNAME=${FLOWISE_USERNAME}
ENV FLOWISE_PASSWORD=${FLOWISE_PASSWORD}
ENV DATABASE_PATH=${DATABASE_PATH:-/app/packages/server/.flowise}
ENV APIKEY_PATH=${APIKEY_PATH:-/app/packages/server/.flowise}
ENV SECRETKEY_PATH=${SECRETKEY_PATH:-/app/packages/server/.flowise}
ENV LOG_PATH=${LOG_PATH:-/app/packages/server/logs}
ENV EXECUTION_PATH=${EXECUTION_PATH:-/app/packages/server/dist}

# Expose port
EXPOSE 3000

# Start the server
CMD ["node", "packages/server/dist/index.js"]