captainVersion: 4
caproverOneClickApp:
  instructions:
    start: |-
      Appwrite is a secure end-to-end backend server for Web, Mobile & Flutter developers that is packaged as a set of Docker containers.
      This will set up Appwrite with MariaDB, Redis, and all required workers.
    end: |-
      Appwrite has been successfully deployed! 
      It may take a few minutes for all services to fully initialize.
      Access your installation at https://$$cap_appname.$$cap_root_domain

  displayName: Appwrite
  isOfficial: true
  description: Secure Backend Server for Web, Mobile & Flutter Developers
  documentation: Taken from https://appwrite.io/docs/installation

  variables:
    - id: $$cap_mariadb_version
      label: MariaDB Version
      defaultValue: '10.11'
      description: Check out their Docker page for the valid tags https://hub.docker.com/_/mariadb
    - id: $$cap_redis_version
      label: Redis Version
      defaultValue: '7.2.4-alpine'
      description: Check out their Docker page for the valid tags https://hub.docker.com/_/redis
    - id: $$cap_appwrite_version
      label: Appwrite Version
      defaultValue: '1.6.0'
      description: Check out their Docker page for the valid tags https://hub.docker.com/r/appwrite/appwrite
    - id: $$cap_console_version
      label: Appwrite Console Version
      defaultValue: '5.0.12'
      description: Check out their Docker page for the valid tags https://hub.docker.com/r/appwrite/console
    - id: $$cap_executor_version
      label: OpenRuntime Executor Version
      defaultValue: '0.6.11'
      description: Check out their Docker page for the valid tags https://hub.docker.com/r/openruntimes/executor
    - id: $$cap_assistant_version
      label: Appwrite Assistant Version
      defaultValue: '0.4.0'
      description: Check out their Docker page for the valid tags https://hub.docker.com/r/appwrite/assistant
    - id: $$cap_assistant_openai_key
      label: OpenAI API Key
      defaultValue: ''
      description: Optional - Your OpenAI API key for the Appwrite Assistant feature
    - id: $$cap_db_root_pass
      label: Database Root Password
      defaultValue: $$cap_gen_random_hex(32)
    - id: $$cap_db_user
      label: Database User
      defaultValue: appwrite
    - id: $$cap_db_pass
      label: Database Password
      defaultValue: $$cap_gen_random_hex(32)
    - id: $$cap_db_name
      label: Database Name
      defaultValue: appwrite
    - id: $$cap_redis_pass
      label: Redis Password
      defaultValue: $$cap_gen_random_hex(32)
    - id: $$cap_executor_secret
      label: Executor Secret
      defaultValue: $$cap_gen_random_hex(32)
    - id: $$cap_encryption_key
      label: Encryption Key
      defaultValue: $$cap_gen_random_hex(32)

services:
  $$cap_appname-traefik:
    image: traefik:2.11
    restart: unless-stopped
    command:
      - --providers.file.directory=/storage/config
      - --providers.file.watch=true
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`,`appwrite`)
      - --entrypoints.appwrite_web.address=:80
      - --entrypoints.appwrite_websecure.address=:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $$cap_appname-config:/storage/config:ro
      - $$cap_appname-certificates:/storage/certificates:ro
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname:
    image: appwrite/appwrite:$$cap_appwrite_version
    restart: unless-stopped
    volumes:
      - $$cap_appname-uploads:/storage/uploads:rw
      - $$cap_appname-cache:/storage/cache:rw
      - $$cap_appname-config:/storage/config:rw
      - $$cap_appname-certificates:/storage/certificates:rw
      - $$cap_appname-functions:/storage/functions:rw
    environment:
      _APP_ENV: production
      _APP_DOMAIN: $$cap_appname.$$cap_root_domain
      _APP_DOMAIN_TARGET: $$cap_appname.$$cap_root_domain
      _APP_OPENSSL_KEY_V1: $$cap_encryption_key
      _APP_EXECUTOR_SECRET: $$cap_executor_secret
      _APP_EXECUTOR_HOST: srv-captain--$$cap_appname-executor
      _APP_REDIS_HOST: srv-captain--$$cap_appname-redis
      _APP_REDIS_PORT: 6379
      _APP_REDIS_USER: default
      _APP_REDIS_PASS: $$cap_redis_pass
      _APP_DB_HOST: srv-captain--$$cap_appname-db
      _APP_DB_PORT: 3306
      _APP_DB_SCHEMA: $$cap_db_name
      _APP_DB_USER: $$cap_db_user
      _APP_DB_PASS: $$cap_db_pass
      _APP_USAGE_STATS: enabled
      _APP_OPTIONS_ABUSE: enabled
      _APP_OPTIONS_FORCE_HTTPS: enabled
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=appwrite
      - traefik.http.services.appwrite_api.loadbalancer.server.port=80
      - traefik.http.routers.appwrite_api_http.entrypoints=appwrite_web
      - traefik.http.routers.appwrite_api_http.rule=PathPrefix(`/`)
      - traefik.http.routers.appwrite_api_http.service=appwrite_api
      - traefik.http.routers.appwrite_api_https.entrypoints=appwrite_websecure
      - traefik.http.routers.appwrite_api_https.rule=PathPrefix(`/`)
      - traefik.http.routers.appwrite_api_https.service=appwrite_api
      - traefik.http.routers.appwrite_api_https.tls=true

  $$cap_appname-console:
    image: appwrite/console:$$cap_console_version
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=appwrite
      - traefik.http.services.appwrite_console.loadbalancer.server.port=80
      - traefik.http.routers.appwrite_console_http.entrypoints=appwrite_web
      - traefik.http.routers.appwrite_console_http.rule=PathPrefix(`/console`)
      - traefik.http.routers.appwrite_console_http.service=appwrite_console
      - traefik.http.routers.appwrite_console_https.entrypoints=appwrite_websecure
      - traefik.http.routers.appwrite_console_https.rule=PathPrefix(`/console`)
      - traefik.http.routers.appwrite_console_https.service=appwrite_console
      - traefik.http.routers.appwrite_console_https.tls=true

  $$cap_appname-realtime:
    image: appwrite/appwrite:$$cap_appwrite_version
    entrypoint: realtime
    restart: unless-stopped
    environment:
      _APP_ENV: production
      _APP_OPTIONS_ABUSE: enabled
      _APP_REDIS_HOST: srv-captain--$$cap_appname-redis
      _APP_REDIS_PORT: 6379
      _APP_REDIS_USER: default
      _APP_REDIS_PASS: $$cap_redis_pass
      _APP_DB_HOST: srv-captain--$$cap_appname-db
      _APP_DB_PORT: 3306
      _APP_DB_SCHEMA: $$cap_db_name
      _APP_DB_USER: $$cap_db_user
      _APP_DB_PASS: $$cap_db_pass
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=appwrite
      - traefik.http.services.appwrite_realtime.loadbalancer.server.port=80
      - traefik.http.routers.appwrite_realtime_ws.entrypoints=appwrite_web
      - traefik.http.routers.appwrite_realtime_ws.rule=PathPrefix(`/v1/realtime`)
      - traefik.http.routers.appwrite_realtime_ws.service=appwrite_realtime
      - traefik.http.routers.appwrite_realtime_wss.entrypoints=appwrite_websecure
      - traefik.http.routers.appwrite_realtime_wss.rule=PathPrefix(`/v1/realtime`)
      - traefik.http.routers.appwrite_realtime_wss.service=appwrite_realtime
      - traefik.http.routers.appwrite_realtime_wss.tls=true

  $$cap_appname-executor:
    image: openruntimes/executor:$$cap_executor_version
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $$cap_appname-functions:/storage/functions:rw
      - $$cap_appname-builds:/storage/builds:rw
      - /tmp:/tmp:rw
    environment:
      OPR_EXECUTOR_SECRET: $$cap_executor_secret
      OPR_EXECUTOR_ENV: production
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname-worker-functions:
    image: appwrite/appwrite:$$cap_appwrite_version
    entrypoint: worker-functions
    restart: unless-stopped
    environment:
      _APP_ENV: production
      _APP_REDIS_HOST: srv-captain--$$cap_appname-redis
      _APP_REDIS_PORT: 6379
      _APP_REDIS_USER: default
      _APP_REDIS_PASS: $$cap_redis_pass
      _APP_DB_HOST: srv-captain--$$cap_appname-db
      _APP_DB_PORT: 3306
      _APP_DB_SCHEMA: $$cap_db_name
      _APP_DB_USER: $$cap_db_user
      _APP_DB_PASS: $$cap_db_pass
      _APP_EXECUTOR_SECRET: $$cap_executor_secret
      _APP_EXECUTOR_HOST: srv-captain--$$cap_appname-executor
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname-worker-deletes:
    image: appwrite/appwrite:$$cap_appwrite_version
    entrypoint: worker-deletes
    restart: unless-stopped
    volumes:
      - $$cap_appname-uploads:/storage/uploads:rw
      - $$cap_appname-cache:/storage/cache:rw
      - $$cap_appname-functions:/storage/functions:rw
      - $$cap_appname-builds:/storage/builds:rw
    environment:
      _APP_ENV: production
      _APP_REDIS_HOST: srv-captain--$$cap_appname-redis
      _APP_REDIS_PORT: 6379
      _APP_REDIS_USER: default
      _APP_REDIS_PASS: $$cap_redis_pass
      _APP_DB_HOST: srv-captain--$$cap_appname-db
      _APP_DB_PORT: 3306
      _APP_DB_SCHEMA: $$cap_db_name
      _APP_DB_USER: $$cap_db_user
      _APP_DB_PASS: $$cap_db_pass
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname-worker-audits:
    image: appwrite/appwrite:$$cap_appwrite_version
    entrypoint: worker-audits
    restart: unless-stopped
    environment:
      _APP_ENV: production
      _APP_REDIS_HOST: srv-captain--$$cap_appname-redis
      _APP_REDIS_PORT: 6379
      _APP_REDIS_USER: default
      _APP_REDIS_PASS: $$cap_redis_pass
      _APP_DB_HOST: srv-captain--$$cap_appname-db
      _APP_DB_PORT: 3306
      _APP_DB_SCHEMA: $$cap_db_name
      _APP_DB_USER: $$cap_db_user
      _APP_DB_PASS: $$cap_db_pass
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname-worker-webhooks:
    image: appwrite/appwrite:$$cap_appwrite_version
    entrypoint: worker-webhooks
    restart: unless-stopped
    environment:
      _APP_ENV: production
      _APP_REDIS_HOST: srv-captain--$$cap_appname-redis
      _APP_REDIS_PORT: 6379
      _APP_REDIS_USER: default
      _APP_REDIS_PASS: $$cap_redis_pass
      _APP_DB_HOST: srv-captain--$$cap_appname-db
      _APP_DB_PORT: 3306
      _APP_DB_SCHEMA: $$cap_db_name
      _APP_DB_USER: $$cap_db_user
      _APP_DB_PASS: $$cap_db_pass
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname-assistant:
    image: appwrite/assistant:$$cap_assistant_version
    restart: unless-stopped
    environment:
      _APP_ASSISTANT_OPENAI_API_KEY: $$cap_assistant_openai_key
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname-db:
    image: mariadb:$$cap_mariadb_version
    restart: unless-stopped
    volumes:
      - $$cap_appname-mariadb:/var/lib/mysql:rw
    environment:
      MYSQL_ROOT_PASSWORD: $$cap_db_root_pass
      MYSQL_DATABASE: $$cap_db_name
      MYSQL_USER: $$cap_db_user
      MYSQL_PASSWORD: $$cap_db_pass
    command: mysqld --innodb-flush-method=fsync
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname-redis:
    image: redis:$$cap_redis_version
    restart: unless-stopped
    command: >
      redis-server
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --maxmemory-samples 5
      --requirepass $$cap_redis_pass
    volumes:
      - $$cap_appname-redis:/data:rw
    caproverExtra:
      notExposeAsWebApp: true
