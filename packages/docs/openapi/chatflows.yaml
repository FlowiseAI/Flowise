openapi: 3.0.0
info:
    title: Chatflows API
    description: API for managing chatflows
    version: 1.0.0
    contact:
        name: AnswerAgentAI Support
        url: https://theanswer.ai
        email: support@theanswer.ai
servers:
    - url: https://prod.studio.theanswer.ai/api/v1
      description: Production server
    - url: http://localhost:4000/api/v1
      description: Local development server
tags:
    - name: chatflows
      description: Operations for managing chatflows
paths:
    /chatflows:
        post:
            summary: Create a new chatflow
            description: Create a new chatflow with the provided details
            operationId: createChatflow
            tags:
                - chatflows
            security:
                - bearerAuth: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Chatflow'
                required: true
            responses:
                '200':
                    description: Chatflow created successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Chatflow'
                '400':
                    description: Invalid input provided
                '422':
                    description: Validation exception
        get:
            summary: List all chatflows
            description: Retrieve a list of all chatflows
            operationId: listChatflows
            tags:
                - chatflows
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Chatflow'
                '500':
                    description: Internal error
    /chatflows/{id}:
        get:
            summary: Get chatflow by ID
            description: Retrieve a specific chatflow by ID
            operationId: getChatflowById
            tags:
                - chatflows
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                  description: Chatflow ID
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Chatflow'
                '400':
                    description: The specified ID is invalid
                '404':
                    description: Chatflow not found
                '500':
                    description: Internal error
        put:
            summary: Update chatflow details
            description: Update the details of an existing chatflow
            operationId: updateChatflow
            tags:
                - chatflows
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                  description: Chatflow ID
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Chatflow'
            responses:
                '200':
                    description: Chatflow updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Chatflow'
                '400':
                    description: The specified ID is invalid or body is missing
                '404':
                    description: Chatflow not found
                '500':
                    description: Internal error
        delete:
            summary: Delete a chatflow
            description: Delete a chatflow by ID
            operationId: deleteChatflow
            tags:
                - chatflows
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
                  description: Chatflow ID
            responses:
                '200':
                    description: Chatflow deleted successfully
                '400':
                    description: The specified ID is invalid
                '404':
                    description: Chatflow not found
                '500':
                    description: Internal error
    /chatflows/apikey/{apikey}:
        get:
            summary: Get chatflow by API key
            description: Retrieve a chatflow using an API key
            operationId: getChatflowByApiKey
            tags:
                - chatflows
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: apikey
                  required: true
                  schema:
                      type: string
                  description: API key associated with the chatflow
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Chatflow'
                '400':
                    description: The specified API key is invalid
                '404':
                    description: Chatflow not found
                '500':
                    description: Internal error
components:
    schemas:
        ChatflowInput:
            type: object
            properties:
                name:
                    type: string
                    example: MyChatFlow
                    description: Name of the chatflow
                flowData:
                    type: string
                    example: >-
                        {"nodes":[{"id":"llmChain_0","position":{"x":1150.2754627300803,"y":434.3428894766783},"type":"customNode","data":{"label":"LLM
                        Chain","name":"llmChain","version":3,"type":"LLMChain","icon":"/Users/bradtaylor/Github/theanswer/packages/server/node_modules/flowise-components/dist/nodes/chains/LLMChain/LLM_Chain.svg","category":"Chains","description":"Chain
                        to run queries against
                        LLMs","baseClasses":["LLMChain","BaseChain","Runnable"],"inputs":{"model":"{{chatOpenAI_0.data.instance}}","prompt":"{{promptTemplate_0.data.instance}}","outputParser":"","inputModeration":"","chainName":""},"outputs":{"output":"llmChain"},"filePath":"/Users/bradtaylor/Github/theanswer/packages/server/node_modules/flowise-components/dist/nodes/chains/LLMChain/LLMChain.js","inputAnchors":[{"label":"Language
                        Model","name":"model","type":"BaseLanguageModel","id":"llmChain_0-input-model-BaseLanguageModel"},{"label":"Prompt","name":"prompt","type":"BasePromptTemplate","id":"llmChain_0-input-prompt-BasePromptTemplate"},{"label":"Output
                        Parser","name":"outputParser","type":"BaseLLMOutputParser","optional":true,"id":"llmChain_0-input-outputParser-BaseLLMOutputParser"},{"label":"Input
                        Moderation","description":"Detect text that could generate harmful output and prevent it
                        from being sent to the language
                        model","name":"inputModeration","type":"Moderation","optional":true,"list":true,"id":"llmChain_0-input-inputModeration-Moderation"}],"inputParams":[{"label":"Chain
                        Name","name":"chainName","type":"string","placeholder":"Name Your
                        Chain","optional":true,"id":"llmChain_0-input-chainName-string"}],"outputAnchors":[{"name":"output","label":"Output","type":"options","description":"","options":[{"id":"llmChain_0-output-llmChain-LLMChain|BaseChain|Runnable","name":"llmChain","label":"LLM
                        Chain","description":"","type":"LLMChain | BaseChain |
                        Runnable"},{"id":"llmChain_0-output-outputPrediction-string|json","name":"outputPrediction","label":"Output
                        Prediction","description":"","type":"string |
                        json"}],"default":"llmChain"}],"id":"llmChain_0","selected":false},"width":300,"height":508,"selected":false,"positionAbsolute":{"x":1150.2754627300803,"y":434.3428894766783},"dragging":false},{"id":"chatOpenAI_0","position":{"x":586.0348372092542,"y":-72.60104631130142},"type":"customNode","data":{"loadMethods":{},"label":"ChatOpenAI","name":"chatOpenAI","version":6,"type":"ChatOpenAI","icon":"/Users/bradtaylor/Github/theanswer/packages/server/node_modules/flowise-components/dist/nodes/chatmodels/ChatOpenAI/openai.svg","category":"Chat
                        Models","description":"Wrapper around OpenAI large language models that use the Chat
                        endpoint","baseClasses":["ChatOpenAI","BaseChatModel","BaseLanguageModel","Runnable"],"credential":"46eda292-d694-4adc-83a0-2a92af522fb8","inputs":{"cache":"","modelName":"gpt-4o-mini","temperature":0.9,"maxTokens":"","topP":"","frequencyPenalty":"","presencePenalty":"","timeout":"","basepath":"","baseOptions":"","allowImageUploads":"","imageResolution":"low"},"filePath":"/Users/bradtaylor/Github/theanswer/packages/server/node_modules/flowise-components/dist/nodes/chatmodels/ChatOpenAI/ChatOpenAI.js","inputAnchors":[{"label":"Cache","name":"cache","type":"BaseCache","optional":true,"id":"chatOpenAI_0-input-cache-BaseCache"}],"inputParams":[{"label":"Connect
                        Credential","name":"credential","type":"credential","credentialNames":["openAIApi"],"id":"chatOpenAI_0-input-credential-credential"},{"label":"Model
                        Name","name":"modelName","type":"asyncOptions","loadMethod":"listModels","default":"gpt-3.5-turbo","id":"chatOpenAI_0-input-modelName-asyncOptions"},{"label":"Temperature","name":"temperature","type":"number","step":0.1,"default":0.9,"optional":true,"id":"chatOpenAI_0-input-temperature-number"},{"label":"Max
                        Tokens","name":"maxTokens","type":"number","step":1,"optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-maxTokens-number"},{"label":"Top
                        Probability","name":"topP","type":"number","step":0.1,"optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-topP-number"},{"label":"Frequency
                        Penalty","name":"frequencyPenalty","type":"number","step":0.1,"optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-frequencyPenalty-number"},{"label":"Presence
                        Penalty","name":"presencePenalty","type":"number","step":0.1,"optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-presencePenalty-number"},{"label":"Timeout","name":"timeout","type":"number","step":1,"optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-timeout-number"},{"label":"BasePath","name":"basepath","type":"string","optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-basepath-string"},{"label":"BaseOptions","name":"baseOptions","type":"json","optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-baseOptions-json"},{"label":"Allow
                        Image Uploads","name":"allowImageUploads","type":"boolean","description":"Automatically
                        uses gpt-4-vision-preview when image is being uploaded from chat. Only works with
                        LLMChain, Conversation Chain, ReAct Agent, and Conversational
                        Agent","default":false,"optional":true,"id":"chatOpenAI_0-input-allowImageUploads-boolean"},{"label":"Image
                        Resolution","description":"This parameter controls the resolution in which the model
                        views the
                        image.","name":"imageResolution","type":"options","options":[{"label":"Low","name":"low"},{"label":"High","name":"high"},{"label":"Auto","name":"auto"}],"default":"low","optional":false,"additionalParams":true,"id":"chatOpenAI_0-input-imageResolution-options"}],"outputs":{},"outputAnchors":[{"id":"chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable","name":"chatOpenAI","label":"ChatOpenAI","description":"Wrapper
                        around OpenAI large language models that use the Chat endpoint","type":"ChatOpenAI |
                        BaseChatModel | BaseLanguageModel |
                        Runnable"}],"id":"chatOpenAI_0","selected":false},"width":300,"height":670,"selected":true,"positionAbsolute":{"x":586.0348372092542,"y":-72.60104631130142},"dragging":false},{"id":"promptTemplate_0","position":{"x":589.6947588003854,"y":620.381196266433},"type":"customNode","data":{"label":"Prompt
                        Template","name":"promptTemplate","version":1,"type":"PromptTemplate","icon":"/Users/bradtaylor/Github/theanswer/packages/server/node_modules/flowise-components/dist/nodes/prompts/PromptTemplate/prompt.svg","category":"Prompts","description":"Schema
                        to represent a basic prompt for an
                        LLM","baseClasses":["PromptTemplate","BaseStringPromptTemplate","BasePromptTemplate","Runnable"],"inputs":{"template":"","promptValues":""},"filePath":"/Users/bradtaylor/Github/theanswer/packages/server/node_modules/flowise-components/dist/nodes/prompts/PromptTemplate/PromptTemplate.js","inputAnchors":[],"inputParams":[{"label":"Template","name":"template","type":"string","rows":4,"placeholder":"What
                        is a good name for a company that makes
                        {product}?","id":"promptTemplate_0-input-template-string"},{"label":"Format Prompt
                        Values","name":"promptValues","type":"json","optional":true,"acceptVariable":true,"list":true,"id":"promptTemplate_0-input-promptValues-json"}],"outputs":{},"outputAnchors":[{"id":"promptTemplate_0-output-promptTemplate-PromptTemplate|BaseStringPromptTemplate|BasePromptTemplate|Runnable","name":"promptTemplate","label":"PromptTemplate","description":"Schema
                        to represent a basic prompt for an LLM","type":"PromptTemplate |
                        BaseStringPromptTemplate | BasePromptTemplate |
                        Runnable"}],"id":"promptTemplate_0","selected":false},"width":300,"height":513,"selected":false,"positionAbsolute":{"x":589.6947588003854,"y":620.381196266433},"dragging":false}],"edges":[{"source":"chatOpenAI_0","sourceHandle":"chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable","target":"llmChain_0","targetHandle":"llmChain_0-input-model-BaseLanguageModel","type":"buttonedge","id":"chatOpenAI_0-chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-llmChain_0-llmChain_0-input-model-BaseLanguageModel"},{"source":"promptTemplate_0","sourceHandle":"promptTemplate_0-output-promptTemplate-PromptTemplate|BaseStringPromptTemplate|BasePromptTemplate|Runnable","target":"llmChain_0","targetHandle":"llmChain_0-input-prompt-BasePromptTemplate","type":"buttonedge","id":"promptTemplate_0-promptTemplate_0-output-promptTemplate-PromptTemplate|BaseStringPromptTemplate|BasePromptTemplate|Runnable-llmChain_0-llmChain_0-input-prompt-BasePromptTemplate"}],"viewport":{"x":497.2914209844679,"y":57.42860622327535,"zoom":0.5261619735996812}}
                    description: JSON string containing the flow data
                deployed:
                    type: boolean
                    description: Whether the chatflow is deployed
                isPublic:
                    type: boolean
                    description: Whether the chatflow is public
                chatbotConfig:
                    type: string
                    example: '{}'
                    description: JSON string containing chatbot configuration
                apiConfig:
                    type: string
                    example: '{}'
                    description: JSON string containing API configuration
                category:
                    type: string
                    example: category1;category2
                    description: Categories for the chatflow (semicolon-separated)
                type:
                    type: string
                    enum:
                        - CHATFLOW
                        - MULTIAGENT
                    description: Type of the chatflow
            required:
                - name
                - flowData
        Chatflow:
            type: object
            properties:
                id:
                    type: string
                    example: d290f1ee-6c54-4b01-90e6-d701748f0851
                name:
                    type: string
                    example: MyChatFlow
                flowData:
                    type: string
                    example: '{}'
                deployed:
                    type: boolean
                isPublic:
                    type: boolean
                apikeyid:
                    type: string
                chatbotConfig:
                    type: string
                    example: '{}'
                apiConfig:
                    type: string
                    example: '{}'
                analytic:
                    type: string
                    example: '{}'
                speechToText:
                    type: string
                    example: '{}'
                category:
                    type: string
                    example: category1;category2
                type:
                    type: string
                    enum:
                        - CHATFLOW
                        - MULTIAGENT
                createdDate:
                    type: string
                    format: date-time
                    example: '2024-08-24T14:15:22Z'
                updatedDate:
                    type: string
                    format: date-time
                    example: '2024-08-24T14:15:22Z'
        Error:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                    description: Error code
                message:
                    type: string
                    description: Error message
            required:
                - code
                - message
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
