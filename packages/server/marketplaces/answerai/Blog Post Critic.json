{
    "nodes": [
        {
            "id": "chatOpenAI_0",
            "position": {
                "x": 707.5800903626107,
                "y": 109.12476306943097
            },
            "type": "customNode",
            "data": {
                "id": "chatOpenAI_0",
                "label": "ChatOpenAI",
                "version": 6,
                "name": "chatOpenAI",
                "type": "ChatOpenAI",
                "baseClasses": ["ChatOpenAI", "BaseChatModel", "BaseLanguageModel", "Runnable"],
                "category": "Chat Models",
                "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["openAIApi"],
                        "id": "chatOpenAI_0-input-credential-credential"
                    },
                    {
                        "label": "Model Name",
                        "name": "modelName",
                        "type": "asyncOptions",
                        "loadMethod": "listModels",
                        "default": "gpt-3.5-turbo",
                        "id": "chatOpenAI_0-input-modelName-asyncOptions"
                    },
                    {
                        "label": "Temperature",
                        "name": "temperature",
                        "type": "number",
                        "step": 0.1,
                        "default": 0.9,
                        "optional": true,
                        "id": "chatOpenAI_0-input-temperature-number"
                    },
                    {
                        "label": "Max Tokens",
                        "name": "maxTokens",
                        "type": "number",
                        "step": 1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-maxTokens-number"
                    },
                    {
                        "label": "Top Probability",
                        "name": "topP",
                        "type": "number",
                        "step": 0.1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-topP-number"
                    },
                    {
                        "label": "Frequency Penalty",
                        "name": "frequencyPenalty",
                        "type": "number",
                        "step": 0.1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-frequencyPenalty-number"
                    },
                    {
                        "label": "Presence Penalty",
                        "name": "presencePenalty",
                        "type": "number",
                        "step": 0.1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-presencePenalty-number"
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "step": 1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-timeout-number"
                    },
                    {
                        "label": "BasePath",
                        "name": "basepath",
                        "type": "string",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-basepath-string"
                    },
                    {
                        "label": "BaseOptions",
                        "name": "baseOptions",
                        "type": "json",
                        "optional": true,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-baseOptions-json"
                    },
                    {
                        "label": "Allow Image Uploads",
                        "name": "allowImageUploads",
                        "type": "boolean",
                        "description": "Automatically uses gpt-4-vision-preview when image is being uploaded from chat. Only works with LLMChain, Conversation Chain, ReAct Agent, and Conversational Agent",
                        "default": false,
                        "optional": true,
                        "id": "chatOpenAI_0-input-allowImageUploads-boolean"
                    },
                    {
                        "label": "Image Resolution",
                        "description": "This parameter controls the resolution in which the model views the image.",
                        "name": "imageResolution",
                        "type": "options",
                        "options": [
                            {
                                "label": "Low",
                                "name": "low"
                            },
                            {
                                "label": "High",
                                "name": "high"
                            },
                            {
                                "label": "Auto",
                                "name": "auto"
                            }
                        ],
                        "default": "low",
                        "optional": false,
                        "additionalParams": true,
                        "id": "chatOpenAI_0-input-imageResolution-options"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Cache",
                        "name": "cache",
                        "type": "BaseCache",
                        "optional": true,
                        "id": "chatOpenAI_0-input-cache-BaseCache"
                    }
                ],
                "inputs": {
                    "cache": "",
                    "modelName": "gpt-4o",
                    "temperature": 0.9,
                    "maxTokens": "",
                    "topP": "",
                    "frequencyPenalty": "",
                    "presencePenalty": "",
                    "timeout": "",
                    "basepath": "",
                    "baseOptions": "",
                    "allowImageUploads": "",
                    "imageResolution": "low"
                },
                "outputAnchors": [
                    {
                        "id": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
                        "name": "chatOpenAI",
                        "label": "ChatOpenAI",
                        "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
                        "type": "ChatOpenAI | BaseChatModel | BaseLanguageModel | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 669,
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 707.5800903626107,
                "y": 109.12476306943097
            }
        },
        {
            "id": "plainText_0",
            "position": {
                "x": 158.8455666335655,
                "y": 675.7688906337446
            },
            "type": "customNode",
            "data": {
                "id": "plainText_0",
                "label": "Plain Text",
                "version": 2,
                "name": "plainText",
                "type": "Document",
                "baseClasses": ["Document"],
                "category": "Document Loaders",
                "description": "Load data from plain text",
                "inputParams": [
                    {
                        "label": "Text",
                        "name": "text",
                        "type": "string",
                        "rows": 4,
                        "placeholder": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua...",
                        "id": "plainText_0-input-text-string"
                    },
                    {
                        "label": "Additional Metadata",
                        "name": "metadata",
                        "type": "json",
                        "description": "Additional metadata to be added to the extracted documents",
                        "optional": true,
                        "additionalParams": true,
                        "id": "plainText_0-input-metadata-json"
                    },
                    {
                        "label": "Omit Metadata Keys",
                        "name": "omitMetadataKeys",
                        "type": "string",
                        "rows": 4,
                        "description": "Each document loader comes with a default set of metadata keys that are extracted from the document. You can use this field to omit some of the default metadata keys. The value should be a list of keys, seperated by comma. Use * to omit all metadata keys execept the ones you specify in the Additional Metadata field",
                        "placeholder": "key1, key2, key3.nestedKey1",
                        "optional": true,
                        "additionalParams": true,
                        "id": "plainText_0-input-omitMetadataKeys-string"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Text Splitter",
                        "name": "textSplitter",
                        "type": "TextSplitter",
                        "optional": true,
                        "id": "plainText_0-input-textSplitter-TextSplitter"
                    }
                ],
                "inputs": {
                    "text": "<brand_voice>\n//your brand voice\n</brand_voice>",
                    "textSplitter": "",
                    "metadata": "",
                    "omitMetadataKeys": ""
                },
                "outputAnchors": [
                    {
                        "name": "output",
                        "label": "Output",
                        "type": "options",
                        "description": "Array of document objects containing metadata and pageContent",
                        "options": [
                            {
                                "id": "plainText_0-output-document-Document|json",
                                "name": "document",
                                "label": "Document",
                                "description": "Array of document objects containing metadata and pageContent",
                                "type": "Document | json"
                            },
                            {
                                "id": "plainText_0-output-text-string|json",
                                "name": "text",
                                "label": "Text",
                                "description": "Concatenated string from pageContent of documents",
                                "type": "string | json"
                            }
                        ],
                        "default": "document"
                    }
                ],
                "outputs": {
                    "output": "text"
                },
                "selected": false
            },
            "width": 300,
            "height": 485,
            "selected": false,
            "positionAbsolute": {
                "x": 158.8455666335655,
                "y": 675.7688906337446
            },
            "dragging": false
        },
        {
            "id": "plainText_1",
            "position": {
                "x": -192.87948063895487,
                "y": 953.1912295081271
            },
            "type": "customNode",
            "data": {
                "id": "plainText_1",
                "label": "Plain Text",
                "version": 2,
                "name": "plainText",
                "type": "Document",
                "baseClasses": ["Document"],
                "category": "Document Loaders",
                "description": "Load data from plain text",
                "inputParams": [
                    {
                        "label": "Text",
                        "name": "text",
                        "type": "string",
                        "rows": 4,
                        "placeholder": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua...",
                        "id": "plainText_1-input-text-string"
                    },
                    {
                        "label": "Additional Metadata",
                        "name": "metadata",
                        "type": "json",
                        "description": "Additional metadata to be added to the extracted documents",
                        "optional": true,
                        "additionalParams": true,
                        "id": "plainText_1-input-metadata-json"
                    },
                    {
                        "label": "Omit Metadata Keys",
                        "name": "omitMetadataKeys",
                        "type": "string",
                        "rows": 4,
                        "description": "Each document loader comes with a default set of metadata keys that are extracted from the document. You can use this field to omit some of the default metadata keys. The value should be a list of keys, seperated by comma. Use * to omit all metadata keys execept the ones you specify in the Additional Metadata field",
                        "placeholder": "key1, key2, key3.nestedKey1",
                        "optional": true,
                        "additionalParams": true,
                        "id": "plainText_1-input-omitMetadataKeys-string"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Text Splitter",
                        "name": "textSplitter",
                        "type": "TextSplitter",
                        "optional": true,
                        "id": "plainText_1-input-textSplitter-TextSplitter"
                    }
                ],
                "inputs": {
                    "text": "<blog_post>\n</blog_post>\n",
                    "textSplitter": "",
                    "metadata": "",
                    "omitMetadataKeys": ""
                },
                "outputAnchors": [
                    {
                        "name": "output",
                        "label": "Output",
                        "type": "options",
                        "description": "Array of document objects containing metadata and pageContent",
                        "options": [
                            {
                                "id": "plainText_1-output-document-Document|json",
                                "name": "document",
                                "label": "Document",
                                "description": "Array of document objects containing metadata and pageContent",
                                "type": "Document | json"
                            },
                            {
                                "id": "plainText_1-output-text-string|json",
                                "name": "text",
                                "label": "Text",
                                "description": "Concatenated string from pageContent of documents",
                                "type": "string | json"
                            }
                        ],
                        "default": "document"
                    }
                ],
                "outputs": {
                    "output": "text"
                },
                "selected": false
            },
            "width": 300,
            "height": 485,
            "selected": false,
            "positionAbsolute": {
                "x": -192.87948063895487,
                "y": 953.1912295081271
            },
            "dragging": false
        },
        {
            "id": "llmChain_0",
            "position": {
                "x": 1150.5733832269552,
                "y": 536.2519213587326
            },
            "type": "customNode",
            "data": {
                "id": "llmChain_0",
                "label": "LLM Chain",
                "version": 3,
                "name": "llmChain",
                "type": "LLMChain",
                "baseClasses": ["LLMChain", "BaseChain", "Runnable"],
                "category": "Chains",
                "description": "Chain to run queries against LLMs",
                "inputParams": [
                    {
                        "label": "Chain Name",
                        "name": "chainName",
                        "type": "string",
                        "placeholder": "Name Your Chain",
                        "optional": true,
                        "id": "llmChain_0-input-chainName-string"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Language Model",
                        "name": "model",
                        "type": "BaseLanguageModel",
                        "id": "llmChain_0-input-model-BaseLanguageModel"
                    },
                    {
                        "label": "Prompt",
                        "name": "prompt",
                        "type": "BasePromptTemplate",
                        "id": "llmChain_0-input-prompt-BasePromptTemplate"
                    },
                    {
                        "label": "Output Parser",
                        "name": "outputParser",
                        "type": "BaseLLMOutputParser",
                        "optional": true,
                        "id": "llmChain_0-input-outputParser-BaseLLMOutputParser"
                    },
                    {
                        "label": "Input Moderation",
                        "description": "Detect text that could generate harmful output and prevent it from being sent to the language model",
                        "name": "inputModeration",
                        "type": "Moderation",
                        "optional": true,
                        "list": true,
                        "id": "llmChain_0-input-inputModeration-Moderation"
                    }
                ],
                "inputs": {
                    "model": "{{chatOpenAI_0.data.instance}}",
                    "prompt": "{{promptTemplate_0.data.instance}}",
                    "outputParser": "",
                    "inputModeration": "",
                    "chainName": ""
                },
                "outputAnchors": [
                    {
                        "name": "output",
                        "label": "Output",
                        "type": "options",
                        "description": "",
                        "options": [
                            {
                                "id": "llmChain_0-output-llmChain-LLMChain|BaseChain|Runnable",
                                "name": "llmChain",
                                "label": "LLM Chain",
                                "description": "",
                                "type": "LLMChain | BaseChain | Runnable"
                            },
                            {
                                "id": "llmChain_0-output-outputPrediction-string|json",
                                "name": "outputPrediction",
                                "label": "Output Prediction",
                                "description": "",
                                "type": "string | json"
                            }
                        ],
                        "default": "llmChain"
                    }
                ],
                "outputs": {
                    "output": "llmChain"
                },
                "selected": false
            },
            "width": 300,
            "height": 507,
            "positionAbsolute": {
                "x": 1150.5733832269552,
                "y": 536.2519213587326
            },
            "selected": false,
            "dragging": false
        },
        {
            "id": "promptTemplate_0",
            "position": {
                "x": 717.7027066350117,
                "y": 960.4416854000958
            },
            "type": "customNode",
            "data": {
                "id": "promptTemplate_0",
                "label": "Prompt Template",
                "version": 1,
                "name": "promptTemplate",
                "type": "PromptTemplate",
                "baseClasses": ["PromptTemplate", "BaseStringPromptTemplate", "BasePromptTemplate", "Runnable"],
                "category": "Prompts",
                "description": "Schema to represent a basic prompt for an LLM",
                "inputParams": [
                    {
                        "label": "Template",
                        "name": "template",
                        "type": "string",
                        "rows": 4,
                        "placeholder": "What is a good name for a company that makes {product}?",
                        "id": "promptTemplate_0-input-template-string"
                    },
                    {
                        "label": "Format Prompt Values",
                        "name": "promptValues",
                        "type": "json",
                        "optional": true,
                        "acceptVariable": true,
                        "list": true,
                        "id": "promptTemplate_0-input-promptValues-json"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "template": "You are a professional Blog Critic tasked with providing comprehensive feedback and suggestions for improving a blog post. Your analysis will focus on marketing effectiveness, educational value, brand voice alignment, compliance with given rules, and consistency with past content.\n\nYou will be given the following inputs:\n\n{blog_post}\n{brand_voice}\n{compliance_rules}\n{past_items}\n\nAnalyze the blog post thoroughly, considering the following aspects:\n\n1. Content Quality:\n   - Evaluate the overall structure, flow, and readability of the post.\n   - Assess the clarity and effectiveness of the main message or topic.\n   - Check for grammatical errors, typos, or awkward phrasing.\n\n2. Marketing Effectiveness:\n   - Determine how well the post engages the target audience.\n   - Evaluate the use of persuasive language and call-to-actions.\n   - Assess the potential for driving traffic or conversions.\n\n3. Educational Value:\n   - Gauge the depth and accuracy of information provided.\n   - Evaluate how well the post explains complex concepts (if applicable).\n   - Assess the use of examples, analogies, or visual aids to enhance understanding.\n\n4. Brand Voice Alignment:\n   - Compare the post's tone and style with the provided brand voice guidelines.\n   - Identify any inconsistencies or areas where the brand voice could be strengthened.\n\n5. Compliance:\n   - Check the post against the provided compliance rules.\n   - Highlight any potential violations or areas of concern.\n\n6. Consistency with Past Items:\n   - Compare the post with the provided past items for consistency in style, tone, and messaging.\n   - Identify opportunities to link to or reference past content for improved coherence.\n\nAfter your analysis, provide your feedback and suggestions in the following format:\n\n<feedback>\n1. Strengths:\n   [List 3-5 positive aspects of the blog post]\n\n2. Areas for Improvement:\n   [List 3-5 aspects that need improvement, along with specific suggestions for each]\n\n3. Brand Voice Alignment:\n   [Provide feedback on how well the post aligns with the brand voice, with suggestions for improvement]\n\n4. Compliance Check:\n   [Highlight any compliance issues and suggest necessary changes]\n\n5. Consistency with Past Content:\n   [Comment on the post's consistency with past items and suggest ways to improve coherence]\n\n6. Overall Recommendation:\n   [Provide a brief summary of your main recommendations for improving the blog post]\n</feedback>\n\nYour feedback should be constructive, specific, and actionable. Aim to provide a balance of positive reinforcement and areas for improvement. Use examples from the blog post to illustrate your points whenever possible.\n\nRemember to maintain a professional and supportive tone throughout your critique. Your goal is to help improve the blog post while considering all the provided inputs and guidelines.",
                    "promptValues": "{\"blog_post\":\"{{plainText_1.data.instance}}\",\"brand_voice\":\"{{plainText_0.data.instance}}\",\"compliance_rules\":\"{{plainText_2.data.instance}}\",\"past_items\":\"{{plainText_3.data.instance}}\"}"
                },
                "outputAnchors": [
                    {
                        "id": "promptTemplate_0-output-promptTemplate-PromptTemplate|BaseStringPromptTemplate|BasePromptTemplate|Runnable",
                        "name": "promptTemplate",
                        "label": "PromptTemplate",
                        "description": "Schema to represent a basic prompt for an LLM",
                        "type": "PromptTemplate | BaseStringPromptTemplate | BasePromptTemplate | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 511,
            "positionAbsolute": {
                "x": 717.7027066350117,
                "y": 960.4416854000958
            },
            "selected": false,
            "dragging": false
        },
        {
            "id": "plainText_2",
            "position": {
                "x": 151.02824479143226,
                "y": 1481.232297008276
            },
            "type": "customNode",
            "data": {
                "id": "plainText_2",
                "label": "Plain Text",
                "version": 2,
                "name": "plainText",
                "type": "Document",
                "baseClasses": ["Document"],
                "category": "Document Loaders",
                "description": "Load data from plain text",
                "inputParams": [
                    {
                        "label": "Text",
                        "name": "text",
                        "type": "string",
                        "rows": 4,
                        "placeholder": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua...",
                        "id": "plainText_2-input-text-string"
                    },
                    {
                        "label": "Additional Metadata",
                        "name": "metadata",
                        "type": "json",
                        "description": "Additional metadata to be added to the extracted documents",
                        "optional": true,
                        "additionalParams": true,
                        "id": "plainText_2-input-metadata-json"
                    },
                    {
                        "label": "Omit Metadata Keys",
                        "name": "omitMetadataKeys",
                        "type": "string",
                        "rows": 4,
                        "description": "Each document loader comes with a default set of metadata keys that are extracted from the document. You can use this field to omit some of the default metadata keys. The value should be a list of keys, seperated by comma. Use * to omit all metadata keys execept the ones you specify in the Additional Metadata field",
                        "placeholder": "key1, key2, key3.nestedKey1",
                        "optional": true,
                        "additionalParams": true,
                        "id": "plainText_2-input-omitMetadataKeys-string"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Text Splitter",
                        "name": "textSplitter",
                        "type": "TextSplitter",
                        "optional": true,
                        "id": "plainText_2-input-textSplitter-TextSplitter"
                    }
                ],
                "inputs": {
                    "text": "<compliance_rules>\n//add any compliance rules here\n</compliance_rules>\n\n",
                    "textSplitter": "",
                    "metadata": "",
                    "omitMetadataKeys": ""
                },
                "outputAnchors": [
                    {
                        "name": "output",
                        "label": "Output",
                        "type": "options",
                        "description": "Array of document objects containing metadata and pageContent",
                        "options": [
                            {
                                "id": "plainText_2-output-document-Document|json",
                                "name": "document",
                                "label": "Document",
                                "description": "Array of document objects containing metadata and pageContent",
                                "type": "Document | json"
                            },
                            {
                                "id": "plainText_2-output-text-string|json",
                                "name": "text",
                                "label": "Text",
                                "description": "Concatenated string from pageContent of documents",
                                "type": "string | json"
                            }
                        ],
                        "default": "document"
                    }
                ],
                "outputs": {
                    "output": "text"
                },
                "selected": false
            },
            "width": 300,
            "height": 485,
            "selected": false,
            "positionAbsolute": {
                "x": 151.02824479143226,
                "y": 1481.232297008276
            },
            "dragging": false
        },
        {
            "id": "plainText_3",
            "position": {
                "x": 560.6993266137794,
                "y": 1601.1537116053794
            },
            "type": "customNode",
            "data": {
                "id": "plainText_3",
                "label": "Plain Text",
                "version": 2,
                "name": "plainText",
                "type": "Document",
                "baseClasses": ["Document"],
                "category": "Document Loaders",
                "description": "Load data from plain text",
                "inputParams": [
                    {
                        "label": "Text",
                        "name": "text",
                        "type": "string",
                        "rows": 4,
                        "placeholder": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua...",
                        "id": "plainText_3-input-text-string"
                    },
                    {
                        "label": "Additional Metadata",
                        "name": "metadata",
                        "type": "json",
                        "description": "Additional metadata to be added to the extracted documents",
                        "optional": true,
                        "additionalParams": true,
                        "id": "plainText_3-input-metadata-json"
                    },
                    {
                        "label": "Omit Metadata Keys",
                        "name": "omitMetadataKeys",
                        "type": "string",
                        "rows": 4,
                        "description": "Each document loader comes with a default set of metadata keys that are extracted from the document. You can use this field to omit some of the default metadata keys. The value should be a list of keys, seperated by comma. Use * to omit all metadata keys execept the ones you specify in the Additional Metadata field",
                        "placeholder": "key1, key2, key3.nestedKey1",
                        "optional": true,
                        "additionalParams": true,
                        "id": "plainText_3-input-omitMetadataKeys-string"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Text Splitter",
                        "name": "textSplitter",
                        "type": "TextSplitter",
                        "optional": true,
                        "id": "plainText_3-input-textSplitter-TextSplitter"
                    }
                ],
                "inputs": {
                    "text": "<past_items>\n//add here\n</past_items>",
                    "textSplitter": "",
                    "metadata": "",
                    "omitMetadataKeys": ""
                },
                "outputAnchors": [
                    {
                        "name": "output",
                        "label": "Output",
                        "type": "options",
                        "description": "Array of document objects containing metadata and pageContent",
                        "options": [
                            {
                                "id": "plainText_3-output-document-Document|json",
                                "name": "document",
                                "label": "Document",
                                "description": "Array of document objects containing metadata and pageContent",
                                "type": "Document | json"
                            },
                            {
                                "id": "plainText_3-output-text-string|json",
                                "name": "text",
                                "label": "Text",
                                "description": "Concatenated string from pageContent of documents",
                                "type": "string | json"
                            }
                        ],
                        "default": "document"
                    }
                ],
                "outputs": {
                    "output": "text"
                },
                "selected": false
            },
            "width": 300,
            "height": 485,
            "selected": false,
            "positionAbsolute": {
                "x": 560.6993266137794,
                "y": 1601.1537116053794
            },
            "dragging": false
        },
        {
            "id": "stickyNote_0",
            "position": {
                "x": 321.7331156396305,
                "y": 484.3453613054643
            },
            "type": "stickyNote",
            "data": {
                "id": "stickyNote_0",
                "label": "Sticky Note",
                "version": 1,
                "name": "stickyNote",
                "type": "StickyNote",
                "baseClasses": ["StickyNote"],
                "category": "Utilities",
                "description": "Add a sticky note",
                "inputParams": [
                    {
                        "label": "",
                        "name": "note",
                        "type": "string",
                        "rows": 1,
                        "placeholder": "Type something here",
                        "optional": true,
                        "id": "stickyNote_0-input-note-string"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "note": "Add your unique brand voice here:\n\ne.g. Tone: Friendly, approachable, and encouraging.\n\nStyle:\n- Use clear, simple language.\nPersonality:\n- Positive and optimistic: Focus on what readers can do, not what they shouldn't do.\n- Empathetic: - Practical -Trustworthy: "
                },
                "outputAnchors": [
                    {
                        "id": "stickyNote_0-output-stickyNote-StickyNote",
                        "name": "stickyNote",
                        "label": "StickyNote",
                        "description": "Add a sticky note",
                        "type": "StickyNote"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 243,
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 321.7331156396305,
                "y": 484.3453613054643
            }
        },
        {
            "id": "stickyNote_2",
            "position": {
                "x": -144.20084345680277,
                "y": 1768.1140831769221
            },
            "type": "stickyNote",
            "data": {
                "id": "stickyNote_2",
                "label": "Sticky Note",
                "version": 1,
                "name": "stickyNote",
                "type": "StickyNote",
                "baseClasses": ["StickyNote"],
                "category": "Utilities",
                "description": "Add a sticky note",
                "inputParams": [
                    {
                        "label": "",
                        "name": "note",
                        "type": "string",
                        "rows": 1,
                        "placeholder": "Type something here",
                        "optional": true,
                        "id": "stickyNote_2-input-note-string"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "note": "Add any compliance rules here like :\n\n-Including a medical disclaimer in all blog posts.\n-Avoiding making absolute health claims; use phrases like \"may help\" and \"research suggests\" instead."
                },
                "outputAnchors": [
                    {
                        "id": "stickyNote_2-output-stickyNote-StickyNote",
                        "name": "stickyNote",
                        "label": "StickyNote",
                        "description": "Add a sticky note",
                        "type": "StickyNote"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 163,
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": -144.20084345680277,
                "y": 1768.1140831769221
            }
        },
        {
            "id": "stickyNote_3",
            "position": {
                "x": 742.9475001537331,
                "y": 1583.1546638264183
            },
            "type": "stickyNote",
            "data": {
                "id": "stickyNote_3",
                "label": "Sticky Note",
                "version": 1,
                "name": "stickyNote",
                "type": "StickyNote",
                "baseClasses": ["StickyNote"],
                "category": "Utilities",
                "description": "Add a sticky note",
                "inputParams": [
                    {
                        "label": "",
                        "name": "note",
                        "type": "string",
                        "rows": 1,
                        "placeholder": "Type something here",
                        "optional": true,
                        "id": "stickyNote_3-input-note-string"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "note": "Add any past items here:\ne.g. you can add entire blog posts, titles, summaries etc."
                },
                "outputAnchors": [
                    {
                        "id": "stickyNote_3-output-stickyNote-StickyNote",
                        "name": "stickyNote",
                        "label": "StickyNote",
                        "description": "Add a sticky note",
                        "type": "StickyNote"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 82,
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 742.9475001537331,
                "y": 1583.1546638264183
            }
        },
        {
            "id": "stickyNote_4",
            "position": {
                "x": 1495.6656184604353,
                "y": 531.5079690333423
            },
            "type": "stickyNote",
            "data": {
                "id": "stickyNote_4",
                "label": "Sticky Note",
                "version": 1,
                "name": "stickyNote",
                "type": "StickyNote",
                "baseClasses": ["StickyNote"],
                "category": "Utilities",
                "description": "Add a sticky note",
                "inputParams": [
                    {
                        "label": "",
                        "name": "note",
                        "type": "string",
                        "rows": 1,
                        "placeholder": "Type something here",
                        "optional": true,
                        "id": "stickyNote_4-input-note-string"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "note": "Instructions for Best Results:\n1. Start with Your Blog Post: Pop your entire blog post into Instance A.\n2. Add Your Brand Voice: Drop your unique brand voice into Instance B.\n3. Include Compliance Rules: Pop any compliance rules into Instance C.\n4. Include Past Items: Add any past items into Instance D.\n5. Save Your Chatflow: Once you're all set, save the chatflow.\n6. Analyze Your Blog: Click the green chat box and type \"GO!\"\n7. Enjoy the Results: Sit back and enjoy the detailed, critical analysis of your blog!"
                },
                "outputAnchors": [
                    {
                        "id": "stickyNote_4-output-stickyNote-StickyNote",
                        "name": "stickyNote",
                        "label": "StickyNote",
                        "description": "Add a sticky note",
                        "type": "StickyNote"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 324,
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 1495.6656184604353,
                "y": 531.5079690333423
            }
        },
        {
            "id": "stickyNote_5",
            "position": {
                "x": 158.07868116745504,
                "y": 1155.6990501186879
            },
            "type": "stickyNote",
            "data": {
                "id": "stickyNote_5",
                "label": "Sticky Note",
                "version": 1,
                "name": "stickyNote",
                "type": "StickyNote",
                "baseClasses": ["StickyNote"],
                "category": "Utilities",
                "description": "Add a sticky note",
                "inputParams": [
                    {
                        "label": "",
                        "name": "note",
                        "type": "string",
                        "rows": 1,
                        "placeholder": "Type something here",
                        "optional": true,
                        "id": "stickyNote_5-input-note-string"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "note": "B"
                },
                "outputAnchors": [
                    {
                        "id": "stickyNote_5-output-stickyNote-StickyNote",
                        "name": "stickyNote",
                        "label": "StickyNote",
                        "description": "Add a sticky note",
                        "type": "StickyNote"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 42,
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 158.07868116745504,
                "y": 1155.6990501186879
            }
        },
        {
            "id": "stickyNote_6",
            "position": {
                "x": -200.25577973928478,
                "y": 1440.0744729587152
            },
            "type": "stickyNote",
            "data": {
                "id": "stickyNote_6",
                "label": "Sticky Note",
                "version": 1,
                "name": "stickyNote",
                "type": "StickyNote",
                "baseClasses": ["StickyNote"],
                "category": "Utilities",
                "description": "Add a sticky note",
                "inputParams": [
                    {
                        "label": "",
                        "name": "note",
                        "type": "string",
                        "rows": 1,
                        "placeholder": "Type something here",
                        "optional": true,
                        "id": "stickyNote_6-input-note-string"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "note": "A"
                },
                "outputAnchors": [
                    {
                        "id": "stickyNote_6-output-stickyNote-StickyNote",
                        "name": "stickyNote",
                        "label": "StickyNote",
                        "description": "Add a sticky note",
                        "type": "StickyNote"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 42,
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": -200.25577973928478,
                "y": 1440.0744729587152
            }
        },
        {
            "id": "stickyNote_7",
            "position": {
                "x": 157.61452798811854,
                "y": 1968.5906139589645
            },
            "type": "stickyNote",
            "data": {
                "id": "stickyNote_7",
                "label": "Sticky Note",
                "version": 1,
                "name": "stickyNote",
                "type": "StickyNote",
                "baseClasses": ["StickyNote"],
                "category": "Utilities",
                "description": "Add a sticky note",
                "inputParams": [
                    {
                        "label": "",
                        "name": "note",
                        "type": "string",
                        "rows": 1,
                        "placeholder": "Type something here",
                        "optional": true,
                        "id": "stickyNote_7-input-note-string"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "note": "C"
                },
                "outputAnchors": [
                    {
                        "id": "stickyNote_7-output-stickyNote-StickyNote",
                        "name": "stickyNote",
                        "label": "StickyNote",
                        "description": "Add a sticky note",
                        "type": "StickyNote"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 42,
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 157.61452798811854,
                "y": 1968.5906139589645
            }
        },
        {
            "id": "stickyNote_8",
            "position": {
                "x": 565.5138452892304,
                "y": 2092.3465850097173
            },
            "type": "stickyNote",
            "data": {
                "id": "stickyNote_8",
                "label": "Sticky Note",
                "version": 1,
                "name": "stickyNote",
                "type": "StickyNote",
                "baseClasses": ["StickyNote"],
                "category": "Utilities",
                "description": "Add a sticky note",
                "inputParams": [
                    {
                        "label": "",
                        "name": "note",
                        "type": "string",
                        "rows": 1,
                        "placeholder": "Type something here",
                        "optional": true,
                        "id": "stickyNote_8-input-note-string"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "note": "D"
                },
                "outputAnchors": [
                    {
                        "id": "stickyNote_8-output-stickyNote-StickyNote",
                        "name": "stickyNote",
                        "label": "StickyNote",
                        "description": "Add a sticky note",
                        "type": "StickyNote"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 42,
            "selected": false,
            "dragging": false,
            "positionAbsolute": {
                "x": 565.5138452892304,
                "y": 2092.3465850097173
            }
        }
    ],
    "edges": [
        {
            "source": "chatOpenAI_0",
            "sourceHandle": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
            "target": "llmChain_0",
            "targetHandle": "llmChain_0-input-model-BaseLanguageModel",
            "type": "buttonedge",
            "id": "chatOpenAI_0-chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-llmChain_0-llmChain_0-input-model-BaseLanguageModel"
        },
        {
            "source": "plainText_0",
            "sourceHandle": "plainText_0-output-text-string|json",
            "target": "promptTemplate_0",
            "targetHandle": "promptTemplate_0-input-promptValues-json",
            "type": "buttonedge",
            "id": "plainText_0-plainText_0-output-text-string|json-promptTemplate_0-promptTemplate_0-input-promptValues-json"
        },
        {
            "source": "plainText_1",
            "sourceHandle": "plainText_1-output-text-string|json",
            "target": "promptTemplate_0",
            "targetHandle": "promptTemplate_0-input-promptValues-json",
            "type": "buttonedge",
            "id": "plainText_1-plainText_1-output-text-string|json-promptTemplate_0-promptTemplate_0-input-promptValues-json"
        },
        {
            "source": "plainText_2",
            "sourceHandle": "plainText_2-output-text-string|json",
            "target": "promptTemplate_0",
            "targetHandle": "promptTemplate_0-input-promptValues-json",
            "type": "buttonedge",
            "id": "plainText_2-plainText_2-output-text-string|json-promptTemplate_0-promptTemplate_0-input-promptValues-json"
        },
        {
            "source": "plainText_3",
            "sourceHandle": "plainText_3-output-text-string|json",
            "target": "promptTemplate_0",
            "targetHandle": "promptTemplate_0-input-promptValues-json",
            "type": "buttonedge",
            "id": "plainText_3-plainText_3-output-text-string|json-promptTemplate_0-promptTemplate_0-input-promptValues-json"
        },
        {
            "source": "promptTemplate_0",
            "sourceHandle": "promptTemplate_0-output-promptTemplate-PromptTemplate|BaseStringPromptTemplate|BasePromptTemplate|Runnable",
            "target": "llmChain_0",
            "targetHandle": "llmChain_0-input-prompt-BasePromptTemplate",
            "type": "buttonedge",
            "id": "promptTemplate_0-promptTemplate_0-output-promptTemplate-PromptTemplate|BaseStringPromptTemplate|BasePromptTemplate|Runnable-llmChain_0-llmChain_0-input-prompt-BasePromptTemplate"
        }
    ]
}
