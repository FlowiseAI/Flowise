{
    "id": "2cc11ebb-4bf4-4d32-8af6-9006ab99c7b0",
    "name": "Default Youtube MCP Sidekick",
    "description": "This YouTube MCP Sidekick is a specialized AI assistant designed to interact directly with the YouTube MCP server by leveraging the official YouTube Data API. In simple terms, it enables users to perform a range of YouTube operations, such as:\n\n• Searching for videos, channels, and playlists with sophisticated query filters (using the search:list endpoint).\n• Retrieving detailed information about individual videos and channels (using videos:list and channels:list endpoints).\n• Listing channels that match specific criteria (e.g., by username, channel ID, or account ownership).\n• Fetching comments or replies associated with a video or top-level comment (using the comments:list endpoint).\n\nIn summary, this sidekick acts as a digital helper that streamlines how users access, manage, and retrieve comprehensive YouTube data—making it easier to integrate YouTube content into apps or websites while ensuring all operations comply with YouTube’s guidelines and quota limitations.",
    "framework": ["Answer Agent"],
    "usecases": [""],
    "userId": "682a145c-186f-46cb-b020-51e962288242",
    "organizationId": "9249f747-f8cf-44aa-acc5-94c654902262",
    "nodes": [
        {
            "id": "aaiToolAgent_0",
            "position": {
                "x": 797.3975527814143,
                "y": 277.3911080764195
            },
            "type": "customNode",
            "data": {
                "id": "aaiToolAgent_0",
                "label": "Tool Agent",
                "version": 2,
                "name": "aaiToolAgent",
                "type": "AgentExecutor",
                "baseClasses": ["AgentExecutor", "BaseChain", "Runnable"],
                "tags": ["AAI"],
                "category": "Agents",
                "description": "Tool Agent • Zero configuration required",
                "inputParams": [
                    {
                        "label": "System Message",
                        "name": "systemMessage",
                        "type": "string",
                        "default": "You are a helpful AI assistant.",
                        "description": "If Chat Prompt Template is provided, this will be ignored",
                        "rows": 4,
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiToolAgent_0-input-systemMessage-string",
                        "display": true
                    },
                    {
                        "label": "Max Iterations",
                        "name": "maxIterations",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiToolAgent_0-input-maxIterations-number",
                        "display": true
                    },
                    {
                        "label": "Enable Detailed Streaming",
                        "name": "enableDetailedStreaming",
                        "type": "boolean",
                        "default": false,
                        "description": "Stream detailed intermediate steps during agent execution",
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiToolAgent_0-input-enableDetailedStreaming-boolean",
                        "display": true
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Tools",
                        "name": "tools",
                        "type": "Tool",
                        "list": true,
                        "id": "aaiToolAgent_0-input-tools-Tool",
                        "display": true
                    },
                    {
                        "label": "Memory",
                        "name": "memory",
                        "type": "BaseChatMemory",
                        "id": "aaiToolAgent_0-input-memory-BaseChatMemory",
                        "display": true
                    },
                    {
                        "label": "Tool Calling Chat Model",
                        "name": "model",
                        "type": "BaseChatModel",
                        "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat",
                        "id": "aaiToolAgent_0-input-model-BaseChatModel",
                        "display": true
                    },
                    {
                        "label": "Chat Prompt Template",
                        "name": "chatPromptTemplate",
                        "type": "ChatPromptTemplate",
                        "description": "Override existing prompt with Chat Prompt Template. Human Message must includes {input} variable",
                        "optional": true,
                        "id": "aaiToolAgent_0-input-chatPromptTemplate-ChatPromptTemplate",
                        "display": true
                    },
                    {
                        "label": "Input Moderation",
                        "description": "Detect text that could generate harmful output and prevent it from being sent to the language model",
                        "name": "inputModeration",
                        "type": "Moderation",
                        "optional": true,
                        "list": true,
                        "id": "aaiToolAgent_0-input-inputModeration-Moderation",
                        "display": true
                    }
                ],
                "inputs": {
                    "tools": ["{{currentDateTime_0.data.instance}}", "{{youtubeMCP_0.data.instance}}"],
                    "memory": "{{AAIChatMemory_0.data.instance}}",
                    "model": "{{aaiChatOpenAI_0.data.instance}}",
                    "chatPromptTemplate": "{{chatPromptTemplate_0.data.instance}}",
                    "systemMessage": "You are a helpful AI assistant.",
                    "inputModeration": "",
                    "maxIterations": "",
                    "enableDetailedStreaming": ""
                },
                "outputAnchors": [
                    {
                        "id": "aaiToolAgent_0-output-aaiToolAgent-AgentExecutor|BaseChain|Runnable",
                        "name": "aaiToolAgent",
                        "label": "AgentExecutor",
                        "description": "Tool Agent • Zero configuration required",
                        "type": "AgentExecutor | BaseChain | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 492,
            "positionAbsolute": {
                "x": 797.3975527814143,
                "y": 277.3911080764195
            },
            "selected": false,
            "dragging": false
        },
        {
            "id": "aaiChatOpenAI_0",
            "position": {
                "x": 321.48081667566703,
                "y": -247.03465143583247
            },
            "type": "customNode",
            "data": {
                "id": "aaiChatOpenAI_0",
                "label": "Answer ChatOpenAI",
                "version": 1,
                "name": "aaiChatOpenAI",
                "type": "AAIChatOpenAI",
                "baseClasses": ["AAIChatOpenAI", "BaseChatModel", "BaseLanguageModel", "Runnable"],
                "tags": ["AAI"],
                "category": "Chat Models",
                "description": "OpenAI GPT models • Zero configuration required",
                "inputParams": [
                    {
                        "label": "Model Name",
                        "name": "modelName",
                        "type": "asyncOptions",
                        "loadMethod": "listModels",
                        "default": "gpt-4o-mini",
                        "id": "aaiChatOpenAI_0-input-modelName-asyncOptions",
                        "display": true
                    },
                    {
                        "label": "Temperature",
                        "name": "temperature",
                        "type": "number",
                        "step": 0.1,
                        "default": 0.9,
                        "optional": true,
                        "id": "aaiChatOpenAI_0-input-temperature-number",
                        "display": true
                    },
                    {
                        "label": "Streaming",
                        "name": "streaming",
                        "type": "boolean",
                        "default": true,
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiChatOpenAI_0-input-streaming-boolean",
                        "display": true
                    },
                    {
                        "label": "Max Tokens",
                        "name": "maxTokens",
                        "type": "number",
                        "step": 1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiChatOpenAI_0-input-maxTokens-number",
                        "display": true
                    },
                    {
                        "label": "Top Probability",
                        "name": "topP",
                        "type": "number",
                        "step": 0.1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiChatOpenAI_0-input-topP-number",
                        "display": true
                    },
                    {
                        "label": "Frequency Penalty",
                        "name": "frequencyPenalty",
                        "type": "number",
                        "step": 0.1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiChatOpenAI_0-input-frequencyPenalty-number",
                        "display": true
                    },
                    {
                        "label": "Presence Penalty",
                        "name": "presencePenalty",
                        "type": "number",
                        "step": 0.1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiChatOpenAI_0-input-presencePenalty-number",
                        "display": true
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "step": 1,
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiChatOpenAI_0-input-timeout-number",
                        "display": true
                    },
                    {
                        "label": "Strict Tool Calling",
                        "name": "strictToolCalling",
                        "type": "boolean",
                        "description": "Whether the model supports the `strict` argument when passing in tools. If not specified, the `strict` argument will not be passed to OpenAI.",
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiChatOpenAI_0-input-strictToolCalling-boolean",
                        "display": true
                    },
                    {
                        "label": "Stop Sequence",
                        "name": "stopSequence",
                        "type": "string",
                        "rows": 4,
                        "optional": true,
                        "description": "List of stop words to use when generating. Use comma to separate multiple stop words.",
                        "additionalParams": true,
                        "id": "aaiChatOpenAI_0-input-stopSequence-string",
                        "display": true
                    },
                    {
                        "label": "BasePath",
                        "name": "basepath",
                        "type": "string",
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiChatOpenAI_0-input-basepath-string",
                        "display": true
                    },
                    {
                        "label": "Proxy Url",
                        "name": "proxyUrl",
                        "type": "string",
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiChatOpenAI_0-input-proxyUrl-string",
                        "display": true
                    },
                    {
                        "label": "BaseOptions",
                        "name": "baseOptions",
                        "type": "json",
                        "optional": true,
                        "additionalParams": true,
                        "id": "aaiChatOpenAI_0-input-baseOptions-json",
                        "display": true
                    },
                    {
                        "label": "Allow Image Uploads",
                        "name": "allowImageUploads",
                        "type": "boolean",
                        "description": "Allow image input. Refer to the <a href=\"https://docs.flowiseai.com/using-flowise/uploads#image\" target=\"_blank\">docs</a> for more details.",
                        "default": false,
                        "optional": true,
                        "id": "aaiChatOpenAI_0-input-allowImageUploads-boolean",
                        "display": true
                    },
                    {
                        "label": "Image Resolution",
                        "description": "This parameter controls the resolution in which the model views the image.",
                        "name": "imageResolution",
                        "type": "options",
                        "options": [
                            {
                                "label": "Low",
                                "name": "low"
                            },
                            {
                                "label": "High",
                                "name": "high"
                            },
                            {
                                "label": "Auto",
                                "name": "auto"
                            }
                        ],
                        "default": "low",
                        "optional": false,
                        "show": {
                            "allowImageUploads": true
                        },
                        "id": "aaiChatOpenAI_0-input-imageResolution-options",
                        "display": true
                    },
                    {
                        "label": "Reasoning Effort",
                        "description": "Constrains effort on reasoning for reasoning models. Only applicable for o1 and o3 models.",
                        "name": "reasoningEffort",
                        "type": "options",
                        "options": [
                            {
                                "label": "Low",
                                "name": "low"
                            },
                            {
                                "label": "Medium",
                                "name": "medium"
                            },
                            {
                                "label": "High",
                                "name": "high"
                            }
                        ],
                        "default": "medium",
                        "optional": false,
                        "additionalParams": true,
                        "id": "aaiChatOpenAI_0-input-reasoningEffort-options",
                        "display": true
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Cache",
                        "name": "cache",
                        "type": "BaseCache",
                        "optional": true,
                        "id": "aaiChatOpenAI_0-input-cache-BaseCache",
                        "display": true
                    }
                ],
                "inputs": {
                    "cache": "",
                    "modelName": "gpt-4o-mini",
                    "temperature": 0.9,
                    "streaming": true,
                    "maxTokens": "",
                    "topP": "",
                    "frequencyPenalty": "",
                    "presencePenalty": "",
                    "timeout": "",
                    "strictToolCalling": "",
                    "stopSequence": "",
                    "basepath": "",
                    "proxyUrl": "",
                    "baseOptions": "",
                    "allowImageUploads": true,
                    "imageResolution": "low",
                    "reasoningEffort": "medium"
                },
                "outputAnchors": [
                    {
                        "id": "aaiChatOpenAI_0-output-aaiChatOpenAI-AAIChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
                        "name": "aaiChatOpenAI",
                        "label": "AAIChatOpenAI",
                        "description": "OpenAI GPT models • Zero configuration required",
                        "type": "AAIChatOpenAI | BaseChatModel | BaseLanguageModel | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 676,
            "selected": false,
            "positionAbsolute": {
                "x": 321.48081667566703,
                "y": -247.03465143583247
            },
            "dragging": false
        },
        {
            "id": "AAIChatMemory_0",
            "position": {
                "x": -7.778718489868993,
                "y": 129.4870179639911
            },
            "type": "customNode",
            "data": {
                "id": "AAIChatMemory_0",
                "label": "Answer Chat Memory",
                "version": 1,
                "name": "AAIChatMemory",
                "type": "AAIChatMemory",
                "baseClasses": ["AAIChatMemory", "BaseChatMemory", "BaseMemory"],
                "tags": ["AAI"],
                "category": "Memory",
                "description": "Summarizes the conversation and stores the memory in Answer Agents servers",
                "inputParams": [
                    {
                        "label": "Session Id",
                        "name": "sessionId",
                        "type": "string",
                        "description": "If not specified, a random id will be used. Learn <a target=\"_blank\" href=\"https://docs.flowiseai.com/memory/long-term-memory#ui-and-embedded-chat\">more</a>",
                        "default": "",
                        "additionalParams": true,
                        "optional": true,
                        "id": "AAIChatMemory_0-input-sessionId-string",
                        "display": true
                    },
                    {
                        "label": "Session Timeouts",
                        "name": "sessionTTL",
                        "type": "number",
                        "description": "Seconds till a session expires. If not specified, the session will never expire.",
                        "additionalParams": true,
                        "optional": true,
                        "id": "AAIChatMemory_0-input-sessionTTL-number",
                        "display": true
                    },
                    {
                        "label": "Memory Key",
                        "name": "memoryKey",
                        "type": "string",
                        "default": "chat_history",
                        "additionalParams": true,
                        "id": "AAIChatMemory_0-input-memoryKey-string",
                        "display": true
                    },
                    {
                        "label": "Window Size",
                        "name": "windowSize",
                        "type": "number",
                        "description": "Window of size k to surface the last k back-and-forth to use as memory.",
                        "additionalParams": true,
                        "optional": true,
                        "id": "AAIChatMemory_0-input-windowSize-number",
                        "display": true
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "sessionId": "",
                    "sessionTTL": "",
                    "memoryKey": "chat_history",
                    "windowSize": ""
                },
                "outputAnchors": [
                    {
                        "id": "AAIChatMemory_0-output-AAIChatMemory-AAIChatMemory|BaseChatMemory|BaseMemory",
                        "name": "AAIChatMemory",
                        "label": "AAIChatMemory",
                        "description": "Summarizes the conversation and stores the memory in Answer Agents servers",
                        "type": "AAIChatMemory | BaseChatMemory | BaseMemory"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 259,
            "selected": false,
            "positionAbsolute": {
                "x": -7.778718489868993,
                "y": 129.4870179639911
            },
            "dragging": false
        },
        {
            "id": "chatPromptTemplate_0",
            "position": {
                "x": 308.95311224250247,
                "y": 664.7281332633123
            },
            "type": "customNode",
            "data": {
                "id": "chatPromptTemplate_0",
                "label": "Chat Prompt Template",
                "version": 2,
                "name": "chatPromptTemplate",
                "type": "ChatPromptTemplate",
                "baseClasses": ["ChatPromptTemplate", "BaseChatPromptTemplate", "BasePromptTemplate", "Runnable"],
                "category": "Prompts",
                "description": "Schema to represent a chat prompt",
                "inputParams": [
                    {
                        "label": "System Message",
                        "name": "systemMessagePrompt",
                        "type": "string",
                        "rows": 4,
                        "placeholder": "You are a helpful assistant that translates {input_language} to {output_language}.",
                        "id": "chatPromptTemplate_0-input-systemMessagePrompt-string",
                        "display": true
                    },
                    {
                        "label": "Human Message",
                        "name": "humanMessagePrompt",
                        "description": "This prompt will be added at the end of the messages as human message",
                        "type": "string",
                        "rows": 4,
                        "placeholder": "{text}",
                        "id": "chatPromptTemplate_0-input-humanMessagePrompt-string",
                        "display": true
                    },
                    {
                        "label": "Format Prompt Values",
                        "name": "promptValues",
                        "type": "json",
                        "optional": true,
                        "acceptVariable": true,
                        "list": true,
                        "id": "chatPromptTemplate_0-input-promptValues-json",
                        "display": true
                    },
                    {
                        "label": "Messages History",
                        "name": "messageHistory",
                        "description": "Add messages after System Message. This is useful when you want to provide few shot examples",
                        "type": "tabs",
                        "tabIdentifier": "selectedMessagesTab",
                        "additionalParams": true,
                        "default": "messageHistoryCode",
                        "tabs": [
                            {
                                "label": "Add Messages (Code)",
                                "name": "messageHistoryCode",
                                "type": "code",
                                "hideCodeExecute": true,
                                "codeExample": "const { AIMessage, HumanMessage, ToolMessage } = require('@langchain/core/messages');\n\nreturn [\n    new HumanMessage(\"What is 333382 🦜 1932?\"),\n    new AIMessage({\n        content: \"\",\n        tool_calls: [\n        {\n            id: \"12345\",\n            name: \"calulator\",\n            args: {\n                number1: 333382,\n                number2: 1932,\n                operation: \"divide\",\n            },\n        },\n        ],\n    }),\n    new ToolMessage({\n        tool_call_id: \"12345\",\n        content: \"The answer is 172.558.\",\n    }),\n    new AIMessage(\"The answer is 172.558.\"),\n]",
                                "optional": true,
                                "additionalParams": true
                            }
                        ],
                        "id": "chatPromptTemplate_0-input-messageHistory-tabs",
                        "display": true
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "systemMessagePrompt": "1. IDENTITY & PURPOSE\nYou are the “YouTube MCP Connector Agent,” an AI assistant that interacts directly with the YouTube MCP server via the official YouTube Data API. Your mission is to help users perform operations such as:\n• Searching for videos, channels, and playlists (using the search:list endpoint)\n• Retrieving detailed video information (using videos:list)\n• Listing channels with strict parameter validation (using channels:list)\n• Fetching detailed data about a specific channel or video\n• Retrieving lists of comments associated with videos or replies to a comment (using comments:list)\n• Executing any additional YouTube MCP operations in full compliance with YouTube’s API specifications\nYou ensure that all responses and operations adhere to YouTube’s official guidelines and parameter requirements.\n\n2. AVAILABLE TOOLS\nTool Name\tWhen to Use\tInvocation Notes\nyoutube_search(query)\tFor general video search operations using simple keywords\tSupply the query string along with any optional filters as needed.\nyoutube_video_details(video_id)\tTo retrieve detailed information about a specific video\tRequires a valid video identifier; uses the videos:list endpoint parameters (e.g., part such as snippet, statistics, contentDetails).\nyoutube_list_channels(params)\tWhen listing channels (e.g., by username, channel ID, or account ownership)\tAccepts query parameters per the channels:list endpoint. Ensure the ‘part’ parameter is set (e.g., snippet, statistics, contentDetails) and only one filter (id, forUsername, mine, etc.) is used.\nyoutube_channel_details(channel_id)\tTo fetch detailed information for a specific channel\tRequires a valid channel identifier; conforms to the official channel resource representation.\nyoutube_list_videos(params)\tWhen listing videos based on specific filters or charts\tAccepts query parameters per the videos:list endpoint. Mandatory parameters include ‘part’ (e.g., snippet, statistics, contentDetails) and exactly one filter (chart, id, myRating, etc.).\nyoutube_search_list(params)\tFor comprehensive searches returning videos, channels, or playlists\tInvokes the search:list endpoint. Requires the ‘part’ parameter (set to snippet) and various optional filters (q, type, channelId, order, regionCode, safeSearch). Note: This call has a higher quota cost (100 units).\nyoutube_list_comments(params)\tTo retrieve a list of comments or replies matching specific criteria\tUses the comments:list endpoint. Requires the ‘part’ parameter (e.g., id, snippet) and accepts filters: either the id parameter (for specific comment IDs) or the parentId parameter (to retrieve replies for a top-level comment). Optional parameters include maxResults, pageToken, and textFormat.\nNote: Each tool invocation must strictly follow the official YouTube Data API documentation. Ensure proper authentication (API key or OAuth 2.0 tokens) and validate parameters for all operations.\n\n3. MODES & BEHAVIOR\n• Default Mode:\n\nHandles routine inquiries such as simple video searches, channel listings, video listings, comment retrieval, and general search queries using the search:list endpoint.\nExtracts and validates the necessary parameters from the user's input and calls the appropriate tool.\n• Detail Mode:\nActivated when the user requests detailed information for a specific video or channel (invoking youtube_video_details or youtube_channel_details).\n• Clarification Mode:\nTriggered when user input is ambiguous or multiple conflicting filters are detected (for example, using more than one filter for channels:list, videos:list, search:list, or comments:list).\nThe agent asks targeted follow-up questions to ensure parameter compliance with official API requirements before proceeding.\n4. STYLE & TONE\n• Professional, clear, and concise\n• Use plain language and direct sentences\n• Present technical details using bullet lists where useful\n• Avoid non-technical jargon, emojis, or overly casual expressions unless explicitly requested\n\n5. CITATIONS & SOURCING\n• Always cite “YouTube Data API” as the source when referencing channel, video, comment, or search data\n• Reference specific endpoints (e.g., channels:list, videos:list, search:list, comments:list) and key parameters (e.g., part, id, forUsername) when relevant\n• If uncertain about details or when input is ambiguous, state “I’m not sure” and request clarification rather than guessing\n\n6. SAFETY & PERMISSIONS\n• Do not access, expose, or store any personal or sensitive user data\n• All API calls must comply with YouTube’s privacy policies and quota limits (e.g., channels:list, videos:list, and comments:list cost 1 unit each, whereas search:list costs 100 units)\n• Do not execute operations that modify content (such as inserts, updates, or deletions) without explicit user consent and proper OAuth tokens\n• Confirm user intent before performing any operation that might alter or expose sensitive data\n\n7. ERROR HANDLING\n• When an API call returns an error (e.g., due to invalid or multiple conflicting filters), the agent should:\n\nApologize briefly and notify the user of the specific error (e.g., “invalidCriteria”, “channelNotFound”, “videoChartNotFound”, “invalidSearchFilter”, “commentNotFound”)\nAsk focused clarifying questions to adjust the input parameters\n• If required parameters (such as the ‘part’ parameter) are missing, explain the requirement and prompt the user for additional details\n• Always provide clear next steps or request further user input when necessary\n8. EXAMPLES (DO NOT OUTPUT VERBATIM)\n• Example 1: “Search videos about ‘latest tech reviews’”\n\nInvocation: youtube_search(query=\"latest tech reviews\")\n• Example 2: “Get details for video id ‘xyz789’”\nInvocation: youtube_video_details(video_id=\"xyz789\")\n• Example 3: “List channels for my account”\nInvocation: youtube_list_channels(params={mine:true, part:\"snippet,statistics,contentDetails\"})\n• Example 4: “Retrieve the channel details for channel id ‘UC12345’”\nInvocation: youtube_channel_details(channel_id=\"UC12345\")\n• Example 5: “List the most popular videos in the US”\nInvocation: youtube_list_videos(params={chart:\"mostPopular\", regionCode:\"US\", part:\"snippet,statistics,contentDetails\", maxResults:5})\n• Example 6: “Search for ‘documentaries’ focusing on videos only”\nInvocation: youtube_search_list(params={q:\"documentaries\", type:\"video\", part:\"snippet\", maxResults:5, order:\"relevance\"})\n• Example 7: “Retrieve comments for video comments with parentId ‘AbCdEf123’”\nInvocation: youtube_list_comments(params={parentId:\"AbCdEf123\", part:\"id,snippet\", maxResults:20})\n9. NON-NEGOTIABLE RULES\n• Always adhere strictly to the official YouTube API documentation when forming and executing requests\n• For channels:list, videos:list, search:list, and comments:list operations, ensure that only one filter is provided per request (e.g., id, forUsername, mine for channels; chart, id, myRating for videos; appropriate filters for search; id or parentId for comments)\n• Never fabricate or assume data if an API call fails or returns incomplete results\n• Confirm the user’s intended operation before executing any API call that might expose or modify data\n• End every response by prompting the user for next steps or additional clarifications to maintain clear and interactive dialogue",
                    "humanMessagePrompt": "The current URL is: {url}\nWeb Context (if any):\n{webContentText}\nOnly use the content or the URL if they are provided. otherwise ignore this section and only use the user input.\n\n###\nFile Uploaded (if any)\n{fileUpload}\nOnly use the content of the file if it is provided. otherwise ignore this section and follow the user input.\n\n###\n\nUser Input:\n{input}\n",
                    "promptValues": "{\"url\":\"No URL provided by the user\",\"webContentText\":\"{{file_attachment}}\",\"fileUpload\":\"No Web Content was provided by the user\",\"input\":\"{{question}}\"}",
                    "messageHistory": "messageHistoryCode"
                },
                "outputAnchors": [
                    {
                        "id": "chatPromptTemplate_0-output-chatPromptTemplate-ChatPromptTemplate|BaseChatPromptTemplate|BasePromptTemplate|Runnable",
                        "name": "chatPromptTemplate",
                        "label": "ChatPromptTemplate",
                        "description": "Schema to represent a chat prompt",
                        "type": "ChatPromptTemplate | BaseChatPromptTemplate | BasePromptTemplate | Runnable"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 748,
            "selected": false,
            "positionAbsolute": {
                "x": 308.95311224250247,
                "y": 664.7281332633123
            },
            "dragging": false
        },
        {
            "id": "currentDateTime_0",
            "position": {
                "x": 786.6589970817336,
                "y": -7.1927104677048135
            },
            "type": "customNode",
            "data": {
                "id": "currentDateTime_0",
                "label": "CurrentDateTime",
                "version": 1,
                "name": "currentDateTime",
                "type": "CurrentDateTime",
                "baseClasses": ["CurrentDateTime", "Tool"],
                "tags": ["AAI"],
                "category": "Tools",
                "description": "Get todays day, date and time.",
                "inputParams": [],
                "inputAnchors": [],
                "inputs": {},
                "outputAnchors": [
                    {
                        "id": "currentDateTime_0-output-currentDateTime-CurrentDateTime|Tool",
                        "name": "currentDateTime",
                        "label": "CurrentDateTime",
                        "description": "Get todays day, date and time.",
                        "type": "CurrentDateTime | Tool"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 149,
            "selected": false,
            "positionAbsolute": {
                "x": 786.6589970817336,
                "y": -7.1927104677048135
            },
            "dragging": false
        },
        {
            "id": "youtubeMCP_0",
            "position": {
                "x": -287.7220037721685,
                "y": 550.4926397856384
            },
            "type": "customNode",
            "data": {
                "id": "youtubeMCP_0",
                "label": "Youtube MCP",
                "version": 1,
                "name": "youtubeMCP",
                "type": "Youtube MCP Tool",
                "baseClasses": ["Tool"],
                "tags": ["AAI"],
                "category": "MCP Servers",
                "description": "MCP server that integrates the Youtube API",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["youtubeApi"],
                        "id": "youtubeMCP_0-input-credential-credential",
                        "display": true
                    },
                    {
                        "label": "Available Actions",
                        "name": "mcpActions",
                        "type": "asyncMultiOptions",
                        "loadMethod": "listActions",
                        "refresh": true,
                        "id": "youtubeMCP_0-input-mcpActions-asyncMultiOptions",
                        "display": true
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "mcpActions": ""
                },
                "outputAnchors": [
                    {
                        "id": "youtubeMCP_0-output-youtubeMCP-Tool",
                        "name": "youtubeMCP",
                        "label": "Youtube MCP Tool",
                        "description": "MCP server that integrates the Youtube API",
                        "type": "Tool"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "width": 300,
            "height": 378,
            "selected": false,
            "positionAbsolute": {
                "x": -287.7220037721685,
                "y": 550.4926397856384
            },
            "dragging": false
        }
    ],
    "edges": [
        {
            "source": "AAIChatMemory_0",
            "sourceHandle": "AAIChatMemory_0-output-AAIChatMemory-AAIChatMemory|BaseChatMemory|BaseMemory",
            "target": "aaiToolAgent_0",
            "targetHandle": "aaiToolAgent_0-input-memory-BaseChatMemory",
            "type": "buttonedge",
            "id": "AAIChatMemory_0-AAIChatMemory_0-output-AAIChatMemory-AAIChatMemory|BaseChatMemory|BaseMemory-aaiToolAgent_0-aaiToolAgent_0-input-memory-BaseChatMemory"
        },
        {
            "source": "aaiChatOpenAI_0",
            "sourceHandle": "aaiChatOpenAI_0-output-aaiChatOpenAI-AAIChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
            "target": "aaiToolAgent_0",
            "targetHandle": "aaiToolAgent_0-input-model-BaseChatModel",
            "type": "buttonedge",
            "id": "aaiChatOpenAI_0-aaiChatOpenAI_0-output-aaiChatOpenAI-AAIChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-aaiToolAgent_0-aaiToolAgent_0-input-model-BaseChatModel"
        },
        {
            "source": "chatPromptTemplate_0",
            "sourceHandle": "chatPromptTemplate_0-output-chatPromptTemplate-ChatPromptTemplate|BaseChatPromptTemplate|BasePromptTemplate|Runnable",
            "target": "aaiToolAgent_0",
            "targetHandle": "aaiToolAgent_0-input-chatPromptTemplate-ChatPromptTemplate",
            "type": "buttonedge",
            "id": "chatPromptTemplate_0-chatPromptTemplate_0-output-chatPromptTemplate-ChatPromptTemplate|BaseChatPromptTemplate|BasePromptTemplate|Runnable-aaiToolAgent_0-aaiToolAgent_0-input-chatPromptTemplate-ChatPromptTemplate"
        },
        {
            "source": "currentDateTime_0",
            "sourceHandle": "currentDateTime_0-output-currentDateTime-CurrentDateTime|Tool",
            "target": "aaiToolAgent_0",
            "targetHandle": "aaiToolAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "currentDateTime_0-currentDateTime_0-output-currentDateTime-CurrentDateTime|Tool-aaiToolAgent_0-aaiToolAgent_0-input-tools-Tool"
        },
        {
            "source": "youtubeMCP_0",
            "sourceHandle": "youtubeMCP_0-output-youtubeMCP-Tool",
            "target": "aaiToolAgent_0",
            "targetHandle": "aaiToolAgent_0-input-tools-Tool",
            "type": "buttonedge",
            "id": "youtubeMCP_0-youtubeMCP_0-output-youtubeMCP-Tool-aaiToolAgent_0-aaiToolAgent_0-input-tools-Tool"
        }
    ]
}
