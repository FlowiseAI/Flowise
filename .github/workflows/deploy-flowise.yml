name: Deploy to ECS

on:
  push:
    branches:
      - main # Trigger deployment on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the code
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
      
    # Step 2: Log in to Amazon ECR
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    # Step 3: Build and push Docker image to Amazon ECR
    - name: Build, tag, and push Docker image to Amazon ECR
      env:
        ECR_REPOSITORY: flowise-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Extract repository URI
        REPOSITORY_URI=$(aws ecr describe-repositories --repository-names $ECR_REPOSITORY --query "repositories[0].repositoryUri" --output text)
        # Build Docker image
        docker build -t $REPOSITORY_URI:$IMAGE_TAG .
        # Push Docker image to ECR
        docker push $REPOSITORY_URI:$IMAGE_TAG
        # Output environment variables for the next steps
        echo "REPOSITORY_URI=$REPOSITORY_URI" >> $GITHUB_ENV
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    # Step 4: Deploy updated image using CloudFormation
    - name: Deploy to ECS using CloudFormation
      env:
        STACK_NAME: flowise-ecs-stack
        ECR_IMAGE_URL: ${{ env.REPOSITORY_URI }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
      run: |
        aws cloudformation update-stack \
          --stack-name $STACK_NAME \
          --template-file aws-cloudformation/flowise.yml \
          --parameters ParameterKey=ECRImageUrl,ParameterValue=$ECR_IMAGE_URL \
                       ParameterKey=ImageTag,ParameterValue=$IMAGE_TAG \
          --capabilities CAPABILITY_NAMED_IAM